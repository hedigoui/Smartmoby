Index: src/main/java/org/example/tests/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.tests;\r\n\r\nimport org.example.models.*;\r\nimport org.example.services.*;\r\nimport org.example.utils.DataSource;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.sql.Connection;\r\nimport java.sql.Timestamp;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\n//TIP To <b>Run</b> code, press <shortcut actionId=\"Run\"/> or\r\n// click the <icon src=\"AllIcons.Actions.Execute\"/> icon in the gutter.\r\npublic class Main {\r\n    private static final Scanner scanner = new Scanner(System.in);\r\n    private static final BlogService blogService = new BlogService();\r\n    private static final AvisService avisService = new AvisService();\r\n    public static void main(String[] args) {\r\n        DataSource dataSource = DataSource.getInstance();\r\n\r\n        Connection connection = dataSource.getConnection();\r\n\r\n        String imagePath = \"C:\\\\Users\\\\hayth\\\\OneDrive\\\\Bureau\\\\pi java\\\\image.png\";\r\n\r\n        // Charger l'image sous forme de tableau de bytes\r\n        byte[] photoBytes = loadImageAsBytes(imagePath);\r\n\r\n        //haythem\r\n\r\n        //user\r\n        Utilisateur_service u = new Utilisateur_service();\r\n        u.ajouter(new Utilisateur(\"ahmed\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.ADMIN));\r\n        /*u.modifier(new Utilisateur(97, \"chams\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\"));\r\n        u.supprimer(new Utilisateur(53, \"\", \"\", \"\", \"\", \"\",null));*/\r\n        u.ajouter(new Utilisateur(\"haythem\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.CONDUCTEUR));\r\n        System.out.println(u.afficher());\r\n\r\n\r\n        //admin\r\n        Admin_service a = new Admin_service();\r\n        a.modifier(new Admin(97, \"hamda\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.ADMIN,\"marketing\"),new Utilisateur(97, \"chams\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\"));\r\n        a.supprimer(new Admin(99, \"\", \"\", \"\", \"\", \"\",null,\"\"), new Utilisateur(99, \"\", \"\", \"\", \"\", \"\",null));\r\n\r\n        //conducteur\r\n        Conducteur_service c = new Conducteur_service();\r\n        c.modifier(new Conducteur(130, \"hitler\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.CONDUCTEUR,2222), new Utilisateur(130, \"hitler\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\"));\r\n        c.supprimer(new Conducteur(136,\"\", \"\", \"\", \"\", \"\",null,0),new Utilisateur(136,\"\", \"\", \"\", \"\", \"\",null));\r\n\r\n        //organisateur\r\n        u.ajouter(new Utilisateur(\"ahmed\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.ORGANISATEUR));\r\n        Organisateur_service o = new Organisateur_service();\r\n        o.modifier(new Organisateur(164,\"hamda\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.ORGANISATEUR,500), new Utilisateur(164,\"hamda\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\"));\r\n        o.supprimer(new Organisateur(161,\"\",\"\",\"\",\"\",\"\",null,0), new Utilisateur(161,\"\",\"\",\"\",\"\",\"\",null));\r\n\r\n        //client\r\n        u.ajouter(new Utilisateur(\"ahmed\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.CLIENT));\r\n        Client_service cl = new Client_service();\r\n        cl.modifier(new Client(177,\"hamda\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\", Utilisateur.Role.CLIENT,177),new Utilisateur(177,\"hamda\", \"ayari\", \"user\", \"aa@gmail.com\", \"aaaa\"));\r\n        cl.supprimer(new Client(177,\"\", \"\", \"\", \"\", \"\", null,0),new Utilisateur(177,\"\",\"\",\"\",\"\",\"\",null));\r\n        //Trajets (hedi)\r\n\r\n        Vehicule s1 = new Vehicule(6, \"trotinette\", 1, \"hors service\", false);\r\n        Vehicule vehiculeToUpdate = new Vehicule(5, \"bus\", 4, \"Available\", false);\r\n        Services sap = new Services();\r\n        sap.add(s1);\r\n        sap.update(vehiculeToUpdate);\r\n        // Print the result of sap.getAll()\r\n        System.out.println(sap.getAll_vehicule());\r\n        Vehicule stockToDelete = new Vehicule();\r\n        stockToDelete.setId(4);\r\n\r\n\r\n        boolean isDeleted = sap.delete(stockToDelete);\r\n\r\n        if (isDeleted) {\r\n            System.out.println(\"Vehicule deleted successfully\");\r\n        } else {\r\n            System.out.println(\"Failed to deleted Vehicule\");\r\n        }\r\n\r\n        System.out.println(\"Vehicule after deleting\" + sap.getAll());\r\n\r\n\r\n        //TRAJET\r\n        Services tap = new Services();\r\n        Trajet t1 = new Trajet(2, \"ariana\", \"petite ariana\",\r\n                Timestamp.valueOf(LocalDateTime.of(2026, 8, 10, 17, 30)),  // Date et heure de départ\r\n                Timestamp.valueOf(LocalDateTime.of(2026, 8, 10, 19, 45)), // Date et heure d'arrivée\r\n                6, 5.5);\r\n\r\n        tap.addtrajet(t1);\r\n        Trajet targetToUpdate = new Trajet(5, \"aouina\", \"zahrouni\",\r\n                Timestamp.valueOf(LocalDateTime.of(2025, 5, 20, 14, 30)),\r\n                Timestamp.valueOf(LocalDateTime.of(2025, 5, 20, 16, 45)),\r\n                6, 5.5);\r\n        tap.update(targetToUpdate);\r\n        ArrayList<Trajet> trajets = tap.getAll();\r\n        for (Trajet trajet : trajets) {\r\n            System.out.println(trajet);  // Assurez-vous que `Trajet` a une méthode `toString()` correcte\r\n        }\r\n        System.out.println(tap.getAll());\r\n\r\n\r\n        Trajet stockToDelete2 = new Trajet();\r\n        stockToDelete2.setId(5);\r\n\r\n\r\n        boolean isDeleted2 = tap.delete(stockToDelete);\r\n\r\n        if (isDeleted2) {\r\n            System.out.println(\"Trajet deleted successfully\");\r\n        } else {\r\n            System.out.println(\"Failed to deleted Trajet\");\r\n        }\r\n\r\n        System.out.println(\"Trajet after deleting\" + tap.getAll());\r\n\r\n\r\n        //Oussema\r\n\r\n        event_serv e1 = new event_serv();\r\n        fedback_serv feedbackService = new fedback_serv();\r\n        fedback newFeedback = new fedback(\"Super événement, très bien organisé!\", 5);\r\n        feedbackService.ajouter(newFeedback);\r\n        fedback feedbackToModify = new fedback(1, \"Événement génial, mais quelques améliorations.\", 4);\r\n        feedbackService.modifier(feedbackToModify);\r\n        fedback feedbackToDelete = new fedback(1, null, 0);\r\n        feedbackService.supprimer(feedbackToDelete);\r\n        List<fedback> fedbacks = feedbackService.afficher();\r\n\r\n\r\n        if (fedbacks.isEmpty()) {\r\n            System.out.println(\"Aucun feedback trouvé.\");\r\n        } else {\r\n            System.out.println(\"Liste des feedbacks :\");\r\n\r\n            for (fedback feedback : fedbacks) {\r\n                System.out.println(\"ID : \" + feedback.getId() + \", Commentaire : \" + feedback.getCommentaire() + \", Note : \" + feedback.getNote());\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            Date date = dateFormat.parse(\"18/10/2025\");\r\n\r\n            event newEvent = new event(\"Conférence Tech\", date, \"Tunis\");\r\n            e1.ajouter(newEvent);\r\n            event eventToModify = new event(2, \"Conférence Tech - Nouvelle Edition\", date, \"Tunis\");  // ID de l'événement à modifier.\r\n\r\n            // Appeler la méthode modifier pour changer les informations de l'événement dans la base de données\r\n            e1.modifier(eventToModify);\r\n            event eventasupprimer = new event(15, \"Conférence Tech - Nouvelle Edition\", date, \"Tunis\");\r\n            eventasupprimer.setId(15);  // Supposons que l'utilisateur avec ID 1 existe dans la base de données\r\n\r\n            // Appeler la méthode supprimer pour supprimer l'utilisateur\r\n            e1.supprimer(eventasupprimer);\r\n        } catch (\r\n                ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        List<event> events = e1.afficher();\r\n\r\n        // Afficher les événements récupérés\r\n        if (events.isEmpty()) {\r\n            System.out.println(\"Aucun événement trouvé.\");\r\n        } else {\r\n            System.out.println(\"Événements trouvés :\");\r\n            for (event ev : events) {\r\n                // Afficher les informations de chaque événement\r\n                System.out.println(ev);\r\n            }\r\n        }\r\n        //hazem\r\n        while (true) {\r\n            System.out.println(\"\\n--- Main Menu ---\");\r\n            System.out.println(\"1. Manage Blogs\");\r\n            System.out.println(\"2. Manage Avis\");\r\n            System.out.println(\"3. Exit\");\r\n            System.out.print(\"Choose an option: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine(); // Consume newline\r\n\r\n            switch (choice) {\r\n                case 1:\r\n                    manageBlogs();\r\n                    break;\r\n                case 2:\r\n                    manageAvis();\r\n                    break;\r\n                case 3:\r\n                    System.out.println(\"Exiting...\");\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Invalid choice. Please try again.\");\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private static byte[] loadImageAsBytes(String imagePath) {\r\n        File file = new File(imagePath);\r\n        byte[] imageBytes = null;\r\n\r\n        try (FileInputStream fis = new FileInputStream(file)) {\r\n            imageBytes = new byte[(int) file.length()];\r\n            fis.read(imageBytes);\r\n        } catch (IOException e) {\r\n            System.out.println(\"Erreur lors de la lecture de l'image : \" + e.getMessage());\r\n        }\r\n\r\n        return imageBytes;\r\n    }\r\n\r\n    private static void manageBlogs() {\r\n        while (true) {\r\n            System.out.println(\"\\n--- Blog Management ---\");\r\n            System.out.println(\"1. Add Blog\");\r\n            System.out.println(\"2. Update Blog\");\r\n            System.out.println(\"3. Delete Blog\");\r\n            System.out.println(\"4. View All Blogs\");\r\n            System.out.println(\"5. Back to Main Menu\");\r\n            System.out.print(\"Choose an option: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine(); // Consume newline\r\n\r\n            switch (choice) {\r\n                case 1:\r\n                    addBlog();\r\n                    break;\r\n                case 2:\r\n                    updateBlog();\r\n                    break;\r\n                case 3:\r\n                    deleteBlog();\r\n                    break;\r\n                case 4:\r\n                    viewAllBlogs();\r\n                    break;\r\n                case 5:\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Invalid choice. Please try again.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void manageAvis() {\r\n        while (true) {\r\n            System.out.println(\"\\n--- Avis Management ---\");\r\n            System.out.println(\"1. Add Avis\");\r\n            System.out.println(\"2. Update Avis\");\r\n            System.out.println(\"3. Delete Avis\");\r\n            System.out.println(\"4. View All Avis\");\r\n            System.out.println(\"5. Back to Main Menu\");\r\n            System.out.print(\"Choose an option: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine(); // Consume newline\r\n\r\n            switch (choice) {\r\n                case 1:\r\n                    addAvis();\r\n                    break;\r\n                case 2:\r\n                    updateAvis();\r\n                    break;\r\n                case 3:\r\n                    deleteAvis();\r\n                    break;\r\n                case 4:\r\n                    viewAllAvis();\r\n                    break;\r\n                case 5:\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Invalid choice. Please try again.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void addBlog() {\r\n        System.out.print(\"Enter blog title: \");\r\n        String title = scanner.nextLine();\r\n        System.out.print(\"Enter blog content: \");\r\n        String content = scanner.nextLine();\r\n        System.out.print(\"Enter blog date (dd/MM/yyyy): \");\r\n        String dateStr = scanner.nextLine();\r\n\r\n        try {\r\n            // Parse the date string into java.util.Date\r\n            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            java.util.Date utilDate = sdf.parse(dateStr);\r\n\r\n            // Convert java.util.Date to java.sql.Date\r\n            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\r\n\r\n            // Create and add the blog\r\n            Blog blog = new Blog(title, content, sqlDate);\r\n            blogService.ajouter(blog);\r\n            System.out.println(\"Blog added successfully!\");\r\n        } catch (ParseException e) {\r\n            System.out.println(\"Invalid date format. Please use dd/MM/yyyy.\");\r\n        }\r\n    }\r\n\r\n    private static void updateBlog() {\r\n        System.out.print(\"Enter blog ID to update: \");\r\n        int id = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n        System.out.print(\"Enter new title: \");\r\n        String title = scanner.nextLine();\r\n        System.out.print(\"Enter new content: \");\r\n        String content = scanner.nextLine();\r\n        System.out.print(\"Enter new date (dd/MM/yyyy): \");\r\n        String dateStr = scanner.nextLine();\r\n\r\n        try {\r\n            // Parse the date string into java.util.Date\r\n            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            java.util.Date utilDate = sdf.parse(dateStr);\r\n\r\n            // Convert java.util.Date to java.sql.Date\r\n            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\r\n\r\n            // Create and update the blog\r\n            Blog blog = new Blog(id, title, content, sqlDate);\r\n            blogService.modifier(blog);\r\n            System.out.println(\"Blog updated successfully!\");\r\n        } catch (ParseException e) {\r\n            System.out.println(\"Invalid date format. Please use dd/MM/yyyy.\");\r\n        }\r\n    }\r\n\r\n    private static void deleteBlog() {\r\n        System.out.print(\"Enter blog ID to delete: \");\r\n        int id = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n        Blog blog = new Blog();\r\n        blog.setId(id);\r\n        blogService.supprimer(blog);\r\n        System.out.println(\"Blog deleted successfully!\");\r\n    }\r\n\r\n    private static void viewAllBlogs() {\r\n        List<Blog> blogs = blogService.rechercher();\r\n        if (blogs.isEmpty()) {\r\n            System.out.println(\"No blogs found.\");\r\n        } else {\r\n            for (Blog blog : blogs) {\r\n                System.out.println(blog);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void addAvis() {\r\n        System.out.print(\"Enter name: \");\r\n        String name = scanner.nextLine();\r\n        System.out.print(\"Enter comment: \");\r\n        String comment = scanner.nextLine();\r\n        System.out.print(\"Enter date (dd/MM/yyyy): \");\r\n        String dateStr = scanner.nextLine();\r\n\r\n        try {\r\n            // Parse the date string into java.util.Date\r\n            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            java.util.Date utilDate = sdf.parse(dateStr);\r\n\r\n            // Convert java.util.Date to java.sql.Date\r\n            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\r\n\r\n            // Create and add the avis\r\n            Avis avis = new Avis(name, comment, sqlDate);\r\n            avisService.ajouter(avis);\r\n            System.out.println(\"Avis added successfully!\");\r\n        } catch (ParseException e) {\r\n            System.out.println(\"Invalid date format. Please use dd/MM/yyyy.\");\r\n        }\r\n    }\r\n\r\n    private static void updateAvis() {\r\n        System.out.print(\"Enter avis ID to update: \");\r\n        int id = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n        System.out.print(\"Enter new name: \");\r\n        String name = scanner.nextLine();\r\n        System.out.print(\"Enter new comment: \");\r\n        String comment = scanner.nextLine();\r\n        System.out.print(\"Enter new date (dd/MM/yyyy): \");\r\n        String dateStr = scanner.nextLine();\r\n\r\n        try {\r\n            // Parse the date string into java.util.Date\r\n            SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n            java.util.Date utilDate = sdf.parse(dateStr);\r\n\r\n            // Convert java.util.Date to java.sql.Date\r\n            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\r\n\r\n            // Create and update the avis\r\n            Avis avis = new Avis(id, name, comment, sqlDate);\r\n            avisService.modifier(avis);\r\n            System.out.println(\"Avis updated successfully!\");\r\n        } catch (ParseException e) {\r\n            System.out.println(\"Invalid date format. Please use dd/MM/yyyy.\");\r\n        }\r\n    }\r\n\r\n    private static void deleteAvis() {\r\n        System.out.print(\"Enter avis ID to delete: \");\r\n        int id = scanner.nextInt();\r\n        scanner.nextLine(); // Consume newline\r\n        Avis avis = new Avis();\r\n        avis.setId(id);\r\n        avisService.supprimer(avis);\r\n        System.out.println(\"Avis deleted successfully!\");\r\n    }\r\n\r\n    private static void viewAllAvis() {\r\n        List<Avis> avisList = avisService.rechercher();\r\n        if (avisList.isEmpty()) {\r\n            System.out.println(\"No avis found.\");\r\n        } else {\r\n            for (Avis avis : avisList) {\r\n                System.out.println(avis);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/tests/Main.java b/src/main/java/org/example/tests/Main.java
--- a/src/main/java/org/example/tests/Main.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/tests/Main.java	(date 1739983751620)
@@ -1,27 +1,18 @@
 package org.example.tests;
 
-import org.example.models.*;
-import org.example.services.*;
+import org.example.models.Admin;
+import org.example.models.Utilisateur;
+import org.example.services.Admin_service;
+import org.example.services.Utilisateur_service;
 import org.example.utils.DataSource;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.sql.Connection;
-import java.sql.Timestamp;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.time.LocalDateTime;
-import java.util.ArrayList;
-import java.util.Date;
-import java.util.List;
-import java.util.Scanner;
 
 //TIP To <b>Run</b> code, press <shortcut actionId="Run"/> or
 // click the <icon src="AllIcons.Actions.Execute"/> icon in the gutter.
 public class Main {
-    private static final Scanner scanner = new Scanner(System.in);
-    private static final BlogService blogService = new BlogService();
-    private static final AvisService avisService = new AvisService();
     public static void main(String[] args) {
         DataSource dataSource = DataSource.getInstance();
 
@@ -32,190 +23,21 @@
         // Charger l'image sous forme de tableau de bytes
         byte[] photoBytes = loadImageAsBytes(imagePath);
 
-        //haythem
-
         //user
         Utilisateur_service u = new Utilisateur_service();
-        u.ajouter(new Utilisateur("ahmed", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.ADMIN));
-        /*u.modifier(new Utilisateur(97, "chams", "ayari", "user", "aa@gmail.com", "aaaa"));
-        u.supprimer(new Utilisateur(53, "", "", "", "", "",null));*/
-        u.ajouter(new Utilisateur("haythem", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.CONDUCTEUR));
+        u.ajouter(new Utilisateur("ahmed","ayari","user","aa@gmail.com",photoBytes,"aaaa"));
+        u.modifier(new Utilisateur(2,"hamda","ayari","user","aa@gmail.com",photoBytes,"aaaa"));
+        u.supprimer(new Utilisateur(3,"", "", "", "", null, ""));
         System.out.println(u.afficher());
 
-
         //admin
         Admin_service a = new Admin_service();
-        a.modifier(new Admin(97, "hamda", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.ADMIN,"marketing"),new Utilisateur(97, "chams", "ayari", "user", "aa@gmail.com", "aaaa"));
-        a.supprimer(new Admin(99, "", "", "", "", "",null,""), new Utilisateur(99, "", "", "", "", "",null));
-
-        //conducteur
-        Conducteur_service c = new Conducteur_service();
-        c.modifier(new Conducteur(130, "hitler", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.CONDUCTEUR,2222), new Utilisateur(130, "hitler", "ayari", "user", "aa@gmail.com", "aaaa"));
-        c.supprimer(new Conducteur(136,"", "", "", "", "",null,0),new Utilisateur(136,"", "", "", "", "",null));
-
-        //organisateur
-        u.ajouter(new Utilisateur("ahmed", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.ORGANISATEUR));
-        Organisateur_service o = new Organisateur_service();
-        o.modifier(new Organisateur(164,"hamda", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.ORGANISATEUR,500), new Utilisateur(164,"hamda", "ayari", "user", "aa@gmail.com", "aaaa"));
-        o.supprimer(new Organisateur(161,"","","","","",null,0), new Utilisateur(161,"","","","","",null));
-
-        //client
-        u.ajouter(new Utilisateur("ahmed", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.CLIENT));
-        Client_service cl = new Client_service();
-        cl.modifier(new Client(177,"hamda", "ayari", "user", "aa@gmail.com", "aaaa", Utilisateur.Role.CLIENT,177),new Utilisateur(177,"hamda", "ayari", "user", "aa@gmail.com", "aaaa"));
-        cl.supprimer(new Client(177,"", "", "", "", "", null,0),new Utilisateur(177,"","","","","",null));
-        //Trajets (hedi)
-
-        Vehicule s1 = new Vehicule(6, "trotinette", 1, "hors service", false);
-        Vehicule vehiculeToUpdate = new Vehicule(5, "bus", 4, "Available", false);
-        Services sap = new Services();
-        sap.add(s1);
-        sap.update(vehiculeToUpdate);
-        // Print the result of sap.getAll()
-        System.out.println(sap.getAll_vehicule());
-        Vehicule stockToDelete = new Vehicule();
-        stockToDelete.setId(4);
-
-
-        boolean isDeleted = sap.delete(stockToDelete);
-
-        if (isDeleted) {
-            System.out.println("Vehicule deleted successfully");
-        } else {
-            System.out.println("Failed to deleted Vehicule");
-        }
-
-        System.out.println("Vehicule after deleting" + sap.getAll());
-
-
-        //TRAJET
-        Services tap = new Services();
-        Trajet t1 = new Trajet(2, "ariana", "petite ariana",
-                Timestamp.valueOf(LocalDateTime.of(2026, 8, 10, 17, 30)),  // Date et heure de départ
-                Timestamp.valueOf(LocalDateTime.of(2026, 8, 10, 19, 45)), // Date et heure d'arrivée
-                6, 5.5);
-
-        tap.addtrajet(t1);
-        Trajet targetToUpdate = new Trajet(5, "aouina", "zahrouni",
-                Timestamp.valueOf(LocalDateTime.of(2025, 5, 20, 14, 30)),
-                Timestamp.valueOf(LocalDateTime.of(2025, 5, 20, 16, 45)),
-                6, 5.5);
-        tap.update(targetToUpdate);
-        ArrayList<Trajet> trajets = tap.getAll();
-        for (Trajet trajet : trajets) {
-            System.out.println(trajet);  // Assurez-vous que `Trajet` a une méthode `toString()` correcte
-        }
-        System.out.println(tap.getAll());
-
-
-        Trajet stockToDelete2 = new Trajet();
-        stockToDelete2.setId(5);
-
-
-        boolean isDeleted2 = tap.delete(stockToDelete);
-
-        if (isDeleted2) {
-            System.out.println("Trajet deleted successfully");
-        } else {
-            System.out.println("Failed to deleted Trajet");
-        }
-
-        System.out.println("Trajet after deleting" + tap.getAll());
-
-
-        //Oussema
-
-        event_serv e1 = new event_serv();
-        fedback_serv feedbackService = new fedback_serv();
-        fedback newFeedback = new fedback("Super événement, très bien organisé!", 5);
-        feedbackService.ajouter(newFeedback);
-        fedback feedbackToModify = new fedback(1, "Événement génial, mais quelques améliorations.", 4);
-        feedbackService.modifier(feedbackToModify);
-        fedback feedbackToDelete = new fedback(1, null, 0);
-        feedbackService.supprimer(feedbackToDelete);
-        List<fedback> fedbacks = feedbackService.afficher();
-
-
-        if (fedbacks.isEmpty()) {
-            System.out.println("Aucun feedback trouvé.");
-        } else {
-            System.out.println("Liste des feedbacks :");
-
-            for (fedback feedback : fedbacks) {
-                System.out.println("ID : " + feedback.getId() + ", Commentaire : " + feedback.getCommentaire() + ", Note : " + feedback.getNote());
-            }
-        }
-
-
-        try {
-            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
-            Date date = dateFormat.parse("18/10/2025");
-
-            event newEvent = new event("Conférence Tech", date, "Tunis");
-            e1.ajouter(newEvent);
-            event eventToModify = new event(2, "Conférence Tech - Nouvelle Edition", date, "Tunis");  // ID de l'événement à modifier.
-
-            // Appeler la méthode modifier pour changer les informations de l'événement dans la base de données
-            e1.modifier(eventToModify);
-            event eventasupprimer = new event(15, "Conférence Tech - Nouvelle Edition", date, "Tunis");
-            eventasupprimer.setId(15);  // Supposons que l'utilisateur avec ID 1 existe dans la base de données
-
-            // Appeler la méthode supprimer pour supprimer l'utilisateur
-            e1.supprimer(eventasupprimer);
-        } catch (
-                ParseException e) {
-            e.printStackTrace();
-        }
-        List<event> events = e1.afficher();
-
-        // Afficher les événements récupérés
-        if (events.isEmpty()) {
-            System.out.println("Aucun événement trouvé.");
-        } else {
-            System.out.println("Événements trouvés :");
-            for (event ev : events) {
-                // Afficher les informations de chaque événement
-                System.out.println(ev);
-            }
-        }
-        //hazem
-        while (true) {
-            System.out.println("\n--- Main Menu ---");
-            System.out.println("1. Manage Blogs");
-            System.out.println("2. Manage Avis");
-            System.out.println("3. Exit");
-            System.out.print("Choose an option: ");
-            int choice = scanner.nextInt();
-            scanner.nextLine(); // Consume newline
-
-            switch (choice) {
-                case 1:
-                    manageBlogs();
-                    break;
-                case 2:
-                    manageAvis();
-                    break;
-                case 3:
-                    System.out.println("Exiting...");
-                    return;
-                default:
-                    System.out.println("Invalid choice. Please try again.");
-            }
-        }
-
-
-
-
-
-
+        a.ajouter(new Admin("admin@example.com", "John Doe", "password123", "IT", photoBytes, "super_admin"));
+        a.modifier(new Admin(5,"aaaaa@example.com", "John Doe", "password123", "IT", photoBytes, "super_admin"));
+        a.supprimer(new Admin(7,"","","","",null,""));
+        System.out.println(a.afficher());
 
     }
-
-
-
-
-
-
     private static byte[] loadImageAsBytes(String imagePath) {
         File file = new File(imagePath);
         byte[] imageBytes = null;
@@ -230,226 +52,7 @@
         return imageBytes;
     }
 
-    private static void manageBlogs() {
-        while (true) {
-            System.out.println("\n--- Blog Management ---");
-            System.out.println("1. Add Blog");
-            System.out.println("2. Update Blog");
-            System.out.println("3. Delete Blog");
-            System.out.println("4. View All Blogs");
-            System.out.println("5. Back to Main Menu");
-            System.out.print("Choose an option: ");
-            int choice = scanner.nextInt();
-            scanner.nextLine(); // Consume newline
-
-            switch (choice) {
-                case 1:
-                    addBlog();
-                    break;
-                case 2:
-                    updateBlog();
-                    break;
-                case 3:
-                    deleteBlog();
-                    break;
-                case 4:
-                    viewAllBlogs();
-                    break;
-                case 5:
-                    return;
-                default:
-                    System.out.println("Invalid choice. Please try again.");
-            }
-        }
-    }
-
-    private static void manageAvis() {
-        while (true) {
-            System.out.println("\n--- Avis Management ---");
-            System.out.println("1. Add Avis");
-            System.out.println("2. Update Avis");
-            System.out.println("3. Delete Avis");
-            System.out.println("4. View All Avis");
-            System.out.println("5. Back to Main Menu");
-            System.out.print("Choose an option: ");
-            int choice = scanner.nextInt();
-            scanner.nextLine(); // Consume newline
-
-            switch (choice) {
-                case 1:
-                    addAvis();
-                    break;
-                case 2:
-                    updateAvis();
-                    break;
-                case 3:
-                    deleteAvis();
-                    break;
-                case 4:
-                    viewAllAvis();
-                    break;
-                case 5:
-                    return;
-                default:
-                    System.out.println("Invalid choice. Please try again.");
-            }
-        }
-    }
-
-    private static void addBlog() {
-        System.out.print("Enter blog title: ");
-        String title = scanner.nextLine();
-        System.out.print("Enter blog content: ");
-        String content = scanner.nextLine();
-        System.out.print("Enter blog date (dd/MM/yyyy): ");
-        String dateStr = scanner.nextLine();
-
-        try {
-            // Parse the date string into java.util.Date
-            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
-            java.util.Date utilDate = sdf.parse(dateStr);
-
-            // Convert java.util.Date to java.sql.Date
-            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-
-            // Create and add the blog
-            Blog blog = new Blog(title, content, sqlDate);
-            blogService.ajouter(blog);
-            System.out.println("Blog added successfully!");
-        } catch (ParseException e) {
-            System.out.println("Invalid date format. Please use dd/MM/yyyy.");
-        }
-    }
-
-    private static void updateBlog() {
-        System.out.print("Enter blog ID to update: ");
-        int id = scanner.nextInt();
-        scanner.nextLine(); // Consume newline
-        System.out.print("Enter new title: ");
-        String title = scanner.nextLine();
-        System.out.print("Enter new content: ");
-        String content = scanner.nextLine();
-        System.out.print("Enter new date (dd/MM/yyyy): ");
-        String dateStr = scanner.nextLine();
-
-        try {
-            // Parse the date string into java.util.Date
-            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
-            java.util.Date utilDate = sdf.parse(dateStr);
-
-            // Convert java.util.Date to java.sql.Date
-            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-
-            // Create and update the blog
-            Blog blog = new Blog(id, title, content, sqlDate);
-            blogService.modifier(blog);
-            System.out.println("Blog updated successfully!");
-        } catch (ParseException e) {
-            System.out.println("Invalid date format. Please use dd/MM/yyyy.");
-        }
-    }
-
-    private static void deleteBlog() {
-        System.out.print("Enter blog ID to delete: ");
-        int id = scanner.nextInt();
-        scanner.nextLine(); // Consume newline
-        Blog blog = new Blog();
-        blog.setId(id);
-        blogService.supprimer(blog);
-        System.out.println("Blog deleted successfully!");
-    }
-
-    private static void viewAllBlogs() {
-        List<Blog> blogs = blogService.rechercher();
-        if (blogs.isEmpty()) {
-            System.out.println("No blogs found.");
-        } else {
-            for (Blog blog : blogs) {
-                System.out.println(blog);
-            }
-        }
-    }
-
-    private static void addAvis() {
-        System.out.print("Enter name: ");
-        String name = scanner.nextLine();
-        System.out.print("Enter comment: ");
-        String comment = scanner.nextLine();
-        System.out.print("Enter date (dd/MM/yyyy): ");
-        String dateStr = scanner.nextLine();
-
-        try {
-            // Parse the date string into java.util.Date
-            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
-            java.util.Date utilDate = sdf.parse(dateStr);
-
-            // Convert java.util.Date to java.sql.Date
-            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-
-            // Create and add the avis
-            Avis avis = new Avis(name, comment, sqlDate);
-            avisService.ajouter(avis);
-            System.out.println("Avis added successfully!");
-        } catch (ParseException e) {
-            System.out.println("Invalid date format. Please use dd/MM/yyyy.");
-        }
-    }
-
-    private static void updateAvis() {
-        System.out.print("Enter avis ID to update: ");
-        int id = scanner.nextInt();
-        scanner.nextLine(); // Consume newline
-        System.out.print("Enter new name: ");
-        String name = scanner.nextLine();
-        System.out.print("Enter new comment: ");
-        String comment = scanner.nextLine();
-        System.out.print("Enter new date (dd/MM/yyyy): ");
-        String dateStr = scanner.nextLine();
-
-        try {
-            // Parse the date string into java.util.Date
-            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
-            java.util.Date utilDate = sdf.parse(dateStr);
-
-            // Convert java.util.Date to java.sql.Date
-            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
-
-            // Create and update the avis
-            Avis avis = new Avis(id, name, comment, sqlDate);
-            avisService.modifier(avis);
-            System.out.println("Avis updated successfully!");
-        } catch (ParseException e) {
-            System.out.println("Invalid date format. Please use dd/MM/yyyy.");
-        }
-    }
-
-    private static void deleteAvis() {
-        System.out.print("Enter avis ID to delete: ");
-        int id = scanner.nextInt();
-        scanner.nextLine(); // Consume newline
-        Avis avis = new Avis();
-        avis.setId(id);
-        avisService.supprimer(avis);
-        System.out.println("Avis deleted successfully!");
-    }
-
-    private static void viewAllAvis() {
-        List<Avis> avisList = avisService.rechercher();
-        if (avisList.isEmpty()) {
-            System.out.println("No avis found.");
-        } else {
-            for (Avis avis : avisList) {
-                System.out.println(avis);
-            }
-        }
-    }
-
-
-
-
-
-}
-
 
 
 
+}
\ No newline at end of file
Index: src/main/java/org/example/models/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class Admin extends Utilisateur {\r\n    private int id_admin;\r\n    private String departement;\r\n\r\n    public Admin(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_admin, String departement) {\r\n        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);\r\n        this.id_admin = id_admin;\r\n        this.departement = departement;\r\n    }\r\n\r\n    public Admin(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_admin, String departement) {\r\n        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);\r\n        this.id_admin = id_admin;\r\n        this.departement = departement;\r\n    }\r\n\r\n    public Admin(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, String departement) {\r\n        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);\r\n        this.departement = departement;\r\n    }\r\n\r\n    public Admin(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, String departement) {\r\n        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);\r\n        this.departement = departement;\r\n    }\r\n\r\n\r\n\r\n    public int getId_admin() {\r\n        return id_admin;\r\n    }\r\n\r\n    public void setId_admin(int id_admin) {\r\n        this.id_admin = id_admin;\r\n    }\r\n\r\n    public String getDepartement() {\r\n        return departement;\r\n    }\r\n\r\n    public void setDepartement(String departement) {\r\n        this.departement = departement;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Admin{\" +\r\n                \"id_admin=\" + id_admin +\r\n                \", departement='\" + departement + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/Admin.java b/src/main/java/org/example/models/Admin.java
--- a/src/main/java/org/example/models/Admin.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/models/Admin.java	(date 1739983751616)
@@ -2,41 +2,69 @@
 
 import java.util.Arrays;
 
-public class Admin extends Utilisateur {
-    private int id_admin;
+public class Admin {
+    private int id;
+    private String email;
+    private String nom_admin;
+    private String mot_de_passe;
     private String departement;
+    private byte[] photo;
+    private String security_level;
 
-    public Admin(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_admin, String departement) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_admin = id_admin;
-        this.departement = departement;
-    }
-
-    public Admin(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_admin, String departement) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_admin = id_admin;
+    public Admin(int id, String email, String nom_admin, String mot_de_passe, String departement, byte[] photo, String security_level) {
+        this.id = id;
+        this.email = email;
+        this.nom_admin = nom_admin;
+        this.mot_de_passe = mot_de_passe;
         this.departement = departement;
+        this.photo = photo;
+        this.security_level = security_level;
+
     }
 
-    public Admin(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, String departement) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
+    public Admin(String email, String nom_admin, String mot_de_passe, String departement, byte[] photo, String security_level) {
+        this.email = email;
+        this.nom_admin = nom_admin;
+        this.mot_de_passe = mot_de_passe;
         this.departement = departement;
+        this.photo = photo;
+        this.security_level = security_level;
+
+    }
+
+    public int getId() {
+        return id;
     }
 
-    public Admin(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, String departement) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.departement = departement;
+    public void setId(int id) {
+        this.id = id;
     }
 
+    public String getEmail() {
+        return email;
+    }
 
+    public void setEmail(String email) {
+        this.email = email;
+    }
 
-    public int getId_admin() {
-        return id_admin;
+    public String getNom_admin() {
+        return nom_admin;
     }
 
-    public void setId_admin(int id_admin) {
-        this.id_admin = id_admin;
+    public void setNom_admin(String nom_admin) {
+        this.nom_admin = nom_admin;
     }
+
+    public String getMot_de_passe() {
+        return mot_de_passe;
+    }
+
+    public void setMot_de_passe(String mot_de_passe) {
+        this.mot_de_passe = mot_de_passe;
+    }
+
+
 
     public String getDepartement() {
         return departement;
@@ -46,11 +74,34 @@
         this.departement = departement;
     }
 
+    public byte[] getPhoto() {
+        return photo;
+    }
+
+    public void setPhoto(byte[] photo) {
+        this.photo = photo;
+    }
+
+    public String getSecurity_level() {
+        return security_level;
+    }
+
+    public void setSecurity_level(String security_level) {
+        this.security_level = security_level;
+    }
+
+
+
     @Override
     public String toString() {
         return "Admin{" +
-                "id_admin=" + id_admin +
+                "id=" + id +
+                ", email='" + email + '\'' +
+                ", nom_admin='" + nom_admin + '\'' +
+                ", mot_de_passe='" + mot_de_passe + '\'' +
                 ", departement='" + departement + '\'' +
+                ", photo=" + Arrays.toString(photo) +
+                ", security_level='" + security_level + '\'' +
                 '}';
     }
 }
Index: src/main/java/org/example/services/BlogService.java
===================================================================
diff --git a/src/main/java/org/example/services/BlogService.java b/src/main/java/org/example/services/BlogService.java
deleted file mode 100644
--- a/src/main/java/org/example/services/BlogService.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,84 +0,0 @@
-package org.example.services;
-
-import org.example.models.Blog;
-import org.example.utils.DataSource;
-
-import java.sql.Connection;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Statement;
-import java.util.ArrayList;
-import java.util.List;
-
-public class BlogService implements IBlogService {
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(Blog blog) {
-        String req = "INSERT INTO blog (title, content, date) VALUES ('"+blog.getTitle()+"', '"+blog.getContent()+"', '" + blog.getDate()+"')";
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Blog ajoutée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(Blog blog) {
-        String req = "UPDATE blog SET title='"+blog.getTitle()+"' ,content='"+blog.getContent()+"' WHERE id="+blog.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Blog modifiée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void supprimer(Blog blog) {
-        String req = "DELETE FROM blog WHERE id="+blog.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Blog supprimée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void ajouter(Object o) {
-
-    }
-
-    @Override
-    public void modifier(Object o) {
-
-    }
-
-    @Override
-    public void supprimer(Object o) {
-
-    }
-
-    @Override
-    public List<Blog> rechercher() {
-        List<Blog> blog = new ArrayList<>();
-
-        String req = "SELECT * FROM blog";
-        try {
-            Statement st = connection.createStatement();
-            ResultSet rs = st.executeQuery(req);
-            while (rs.next()) {
-                blog.add(new Blog(rs.getInt("id"), rs.getString("title"), rs.getString("content") , rs.getDate("date")));
-            }
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-        return blog;
-    }
-}
Index: src/main/java/org/example/models/Conducteur.java
===================================================================
diff --git a/src/main/java/org/example/models/Conducteur.java b/src/main/java/org/example/models/Conducteur.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Conducteur.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,53 +0,0 @@
-package org.example.models;
-
-public class Conducteur extends Utilisateur{
-    private int id_conducteur;
-    private int numero_permis;
-
-    public Conducteur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_conducteur, int numero_permis) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_conducteur = id_conducteur;
-        this.numero_permis = numero_permis;
-    }
-
-    public Conducteur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_conducteur, int numero_permis) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_conducteur = id_conducteur;
-        this.numero_permis = numero_permis;
-    }
-
-    public Conducteur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int numero_permis) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.numero_permis = numero_permis;
-    }
-
-    public Conducteur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int numero_permis) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.numero_permis = numero_permis;
-    }
-
-    public int getId_conducteur() {
-        return id_conducteur;
-    }
-
-    public void setId_conducteur(int id_conducteur) {
-        this.id_conducteur = id_conducteur;
-    }
-
-    public int getNumero_permis() {
-        return numero_permis;
-    }
-
-    public void setNumero_permis(int numero_permis) {
-        this.numero_permis = numero_permis;
-    }
-
-    @Override
-    public String
-    toString() {
-        return "Conducteur{" +
-                "id_conducteur=" + id_conducteur +
-                ", numero_permis=" + numero_permis +
-                '}';
-    }
-}
Index: src/main/resources/AcceuilUser.css
===================================================================
diff --git a/src/main/resources/AcceuilUser.css b/src/main/resources/AcceuilUser.css
deleted file mode 100644
--- a/src/main/resources/AcceuilUser.css	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,46 +0,0 @@
-.left-form{
-    -fx-background-color: linear-gradient(to bottom right, #4f4c4e, #98ff96);
-    -fx-border-color: #0000;
-    -fx-border-width: .4px 0px .4px .4px ;
-}
-
-.nav-btn{
-    -fx-background-color: transparent;
-    -fx-cursor:hand;
-    -fx-font-size:14px;
-    -fx-font-family: "Arial";
-    -fx-text-fill: #000000;
-    -fx-alignment: CENTER-LEFT;
-}
-
-.nav-btn:pressed {
-    -fx-text-fill: #ffffff; /* Blanc */
-}
-
-.text-field{
-    -fx-background-color: #fff;
-    -fx-background-radius: 4px;
-    -fx-border-color: #000;
-    -fx-border-width: 2px;
-    -fx-border-radius: 4px;
-    -fx-font-size: 13px;
-    -fx-font-family: "Tahoma";
-}
-
-.text-field:focused{
-    -fx-border-color: linear-gradient(to bottom right , #4f4c4e, #98ff96 );
-    -fx-border-width: 1.4px;
-}
-
-.login-btn{
-    -fx-background-color: linear-gradient(to bottom , #4f4c4e, #98ff96);
-    -fx-background-radius: 4px;
-    -fx-cursor:hand;
-    -fx-text-fill: #fff;
-    -fx-font-size: 14px;
-    -fx-font-family: "Arial";
-}
-
-.login-btn:hover{
-    -fx-background-color: linear-gradient(to bottom, #54ae96, #55867e);
-}
\ No newline at end of file
Index: src/main/java/org/example/services/IService.java
===================================================================
diff --git a/src/main/java/org/example/services/IService.java b/src/main/java/org/example/services/IService.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IService.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,11 +0,0 @@
-package com.esprit.services;
-
-import java.util.List;
-
-public interface IService<T> {
-
-    void ajouter(T t);
-    void modifier(T t);
-    void supprimer(T t);
-    List<T> rechercher();
-}
Index: src/main/java/org/example/models/Avis.java
===================================================================
diff --git a/src/main/java/org/example/models/Avis.java b/src/main/java/org/example/models/Avis.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Avis.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,72 +0,0 @@
-package org.example.models;
-
-import java.util.Date;
-
-public class Avis {
-    private int id;
-    private String name;
-    private String comment;
-    private Date date;
-
-    // Constructor without id (for insertion)
-    public Avis(String name, String comment, Date date) {
-        this.name = name;
-        this.comment = comment;
-        this.date = date;
-    }
-
-    // Constructor with id (for retrieval)
-    public Avis(int id, String name, String comment, Date date) {
-        this.id = id;
-        this.name = name;
-        this.comment = comment;
-        this.date = date;
-    }
-
-    public Avis() {
-
-    }
-
-    // Getters and setters
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public String getComment() {
-        return comment;
-    }
-
-    public void setComment(String comment) {
-        this.comment = comment;
-    }
-
-    public Date getDate() {
-        return date;
-    }
-
-    public void setDate(Date date) {
-        this.date = date;
-    }
-
-    @Override
-    public String toString() {
-        return "Avis{" +
-                "id=" + id +
-                ", name='" + name + '\'' +
-                ", comment='" + comment + '\'' +
-                ", date=" + date +
-                '}';
-    }
-}
\ No newline at end of file
Index: src/main/java/org/example/services/IClient_service.java
===================================================================
diff --git a/src/main/java/org/example/services/IClient_service.java b/src/main/java/org/example/services/IClient_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IClient_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,10 +0,0 @@
-package org.example.services;
-
-import org.example.models.Client;
-import org.example.models.Utilisateur;
-
-public interface IClient_service {
-    public void ajouter (Client client);
-    public void modifier (Client client, Utilisateur utilisateur);
-    public void supprimer (Client client, Utilisateur utilisateur);
-}
Index: src/main/java/org/example/services/fedback_serv.java
===================================================================
diff --git a/src/main/java/org/example/services/fedback_serv.java b/src/main/java/org/example/services/fedback_serv.java
deleted file mode 100644
--- a/src/main/java/org/example/services/fedback_serv.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,69 +0,0 @@
-package org.example.services;
-
-import org.example.models.fedback;
-import org.example.utils.DataSource;
-
-import java.sql.*;
-import java.util.ArrayList;
-import java.util.List;
-
-
-public class fedback_serv implements Ifedback {
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(fedback fedback) {
-        String req = "INSERT INTO fedback (commentaire, note) VALUES ('" + fedback.getCommentaire() + "', '" + fedback.getNote() + "' )";
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("fedback ajoutée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(fedback fedback) {
-        String req = "UPDATE fedback SET commentaire='" + fedback.getCommentaire() + "' ,note='" + fedback.getNote() + "'  WHERE id=" + fedback.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("fedback modifiée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-
-    @Override
-    public void supprimer(fedback fedback) {
-        String req = "DELETE FROM fedback WHERE id=" + fedback.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("fedback supprimée");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public List<fedback> afficher() {
-        List<fedback> fedbacks = new ArrayList<>();
-
-        String req = "SELECT * FROM fedback";
-        try {
-            Statement st = connection.createStatement();
-            ResultSet rs = st.executeQuery(req);
-            while (rs.next()) {
-                fedbacks.add(new fedback(rs.getInt("id"), rs.getString("commentaire"), rs.getInt("note") ));
-            }
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-        return fedbacks;
-    }
-}
-
Index: src/main/java/org/example/services/Ifedback.java
===================================================================
diff --git a/src/main/java/org/example/services/Ifedback.java b/src/main/java/org/example/services/Ifedback.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Ifedback.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,18 +0,0 @@
-package org.example.services;
-
-import org.example.models.event;
-import org.example.models.fedback;
-
-import java.util.List;
-
-public interface Ifedback {
-    void ajouter(fedback fedback);
-
-    void modifier(fedback fedback);
-
-    void supprimer(fedback fedback);
-
-    List<fedback> afficher();
-
-
-}
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: src/main/java/org/example/services/Conducteur_service.java
===================================================================
diff --git a/src/main/java/org/example/services/Conducteur_service.java b/src/main/java/org/example/services/Conducteur_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Conducteur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,66 +0,0 @@
-package org.example.services;
-
-import org.example.models.Conducteur;
-
-import java.sql.Connection;
-import java.sql.SQLException;
-import java.sql.Statement;
-
-import org.example.models.Utilisateur;
-import org.example.utils.DataSource;
-
-public class Conducteur_service implements IConducteur_service{
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(Conducteur conducteur) {
-        String req = "INSERT INTO conducteur (id, numero_permis) VALUES (" + conducteur.getId_conducteur() + ", '" + conducteur.getNumero_permis() + "')";
-
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Conducteur ajouté avec succès.");
-        } catch (SQLException e) {
-            System.out.println("Erreur lors de l'ajout de le conducteur : " + e.getMessage());
-        }
-
-    }
-
-    @Override
-    public void modifier(Conducteur conducteur , Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "UPDATE conducteur SET numero_permis='" + conducteur.getNumero_permis() + "' WHERE id=" + conducteur.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "UPDATE utilisateur SET nom='" + utilisateur.getNom() + "', prenom='" + utilisateur.getPrenom() +
-                    "', nom_utilisateur='" + utilisateur.getNom_utilisateur() + "', email='" + utilisateur.getEmail() +
-                    "', mot_de_passe='" + utilisateur.getMot_de_passe() + "' WHERE id=" + utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Conducteur et utilisateur modifiés");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-
-    @Override
-    public void supprimer(Conducteur conducteur,Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "DELETE FROM conducteur WHERE id="+conducteur.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "DELETE FROM utilisateur WHERE id="+utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Conducteur et utilisateur supprime");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-}
Index: src/main/java/org/example/services/Services.java
===================================================================
diff --git a/src/main/java/org/example/services/Services.java b/src/main/java/org/example/services/Services.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Services.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,177 +0,0 @@
-package org.example.services;
-import org.example.utils.DataSource;
-import org.example.models.Trajet;
-import org.example.models.Vehicule;
-
-import java.sql.Timestamp;
-import java.sql.*;
-import java.util.ArrayList;
-
-public class Services {
-    private Connection cnx ;
-    public Services(){cnx = DataSource.getInstance().getConnection();}
-    public void add(Vehicule vehicule) {
-        String qry ="INSERT INTO `Vehicule`(`type`, `capacite`,`statut`,`dispo`) VALUES (?,?,?,?)";
-        try {
-            PreparedStatement stm = cnx.prepareStatement(qry);
-            stm.setString(1, vehicule.getType());
-            stm.setInt(2,vehicule.getCapacite());
-            stm.setString(3,vehicule.getStatut());
-            stm.setInt(4, vehicule.isDispo() ? 1 : 0);
-
-            stm.executeUpdate();
-
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-
-        }
-
-
-    }
-    public ArrayList<Vehicule> getAll_vehicule() {
-        ArrayList<Vehicule> vehicules = new ArrayList<>();
-        String qry="SELECT * FROM `Vehicule`";
-        try {
-            Statement stm = cnx.createStatement();
-            ResultSet rs = stm.executeQuery(qry);
-            while (rs.next()) { Vehicule s = new Vehicule();
-                s.setId(rs.getInt(1));
-                s.setType(rs.getString("type"));
-                s.setCapacite(rs.getInt(3));
-                s.setStatut(rs.getString("statut"));
-                s.setDispo(rs.getBoolean(5));
-
-                vehicules.add(s);
-            }
-
-
-
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-        return vehicules;
-    }
-    public void update(Vehicule vehicule) {
-        String qry = "UPDATE `vehicule` SET `id`=?,`type`=?,`capacite`=?,`statut`=?,`dispo`=? WHERE id = ?";
-        try {
-            PreparedStatement stm = cnx.prepareStatement(qry);
-            stm.setInt(1, vehicule.getId());
-            stm.setString(2, vehicule.getType());
-            stm.setInt(3, vehicule.getCapacite());
-            stm.setString(4, vehicule.getStatut());
-            stm.setInt(5, vehicule.isDispo() ? 1 : 0);
-            stm.setInt(6, vehicule.getId());
-            int resultat = stm.executeUpdate();
-            if (resultat > 0) {
-                System.out.println("Post modif avec succs !");
-            } else {
-                System.out.println("Erreur lors de la modification du post.");
-            }
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-    public boolean delete(Vehicule vehicule) {
-        String qry ="DELETE FROM `vehicule` WHERE `id`=?";
-        try{
-            PreparedStatement stm = cnx.prepareStatement(qry);
-            stm.setInt(1,vehicule.getId());
-
-            int affectedRows = stm.executeUpdate();
-            return affectedRows > 0 ;
-        }catch (SQLException e){
-            System.out.println(e.getMessage());
-            return false;
-        }
-    }
-
-    public void addtrajet(Trajet trajet) {
-        String query = "INSERT INTO `Trajet`( `pointD`, `pointA`, `dateD`, `dateA`, `distance`, `prix`) VALUES (?,?,?,?,?,?)";
-        try {
-            PreparedStatement stm = cnx.prepareStatement(query);
-
-
-            stm.setString(1, trajet.getPointD());
-            stm.setString(2, trajet.getPointA());
-            stm.setTimestamp(3, new java.sql.Timestamp(trajet.getDateD().getTime()));  // Conversion pour DATETIME
-            stm.setTimestamp(4, new java.sql.Timestamp(trajet.getDateA().getTime()));  // Conversion pour DATETIME
-            stm.setDouble(5, trajet.getDistance());
-            stm.setDouble(6, trajet.getPrix());
-
-            stm.executeUpdate();
-
-        } catch (SQLException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public ArrayList<Trajet> getAll() {
-        ArrayList<Trajet> trajets = new ArrayList<>();
-        String qry = "SELECT * FROM `Trajet`"; // Requête SQL pour récupérer tous les trajets
-
-        try {
-            Statement stm = cnx.createStatement();
-            ResultSet rs = stm.executeQuery(qry);
-
-            while (rs.next()) {
-                // Création d'un objet Trajet et remplissage avec les données de la base de données
-                Trajet t = new Trajet();
-
-                t.setId(rs.getInt(1));  // ID
-                t.setPointD(rs.getString("pointD"));  // Ville de départ
-                t.setPointA(rs.getString("pointA"));  // Ville d'arrivée
-                t.setDateD(rs.getTimestamp("dateD"));  // Date de départ
-                t.setDateA(rs.getTimestamp("dateA"));  // Date d'arrivée
-                t.setDistance(rs.getDouble("distance"));  // Distance
-                t.setPrix(rs.getDouble("prix"));  // Prix
-
-                // Ajouter le trajet à la liste
-                trajets.add(t);
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-            throw new RuntimeException("Erreur lors de la récupération des trajets", e);
-        }
-        return trajets;
-    }
-
-    public void update(Trajet trajet) {
-        String qry = "UPDATE `Trajet` SET `pointD`=?, `pointA`=?, `dateD`=?, `dateA`=?, `distance`=?, `prix`=? WHERE `id`=?";
-        try {
-            PreparedStatement stm = cnx.prepareStatement(qry);
-            stm.setString(1, trajet.getPointD());
-            stm.setString(2, trajet.getPointA());
-            stm.setTimestamp(3, trajet.getDateD());  // Utilisation de Timestamp pour DATETIME
-            stm.setTimestamp(4, trajet.getDateA());
-            stm.setDouble(5, trajet.getDistance());
-            stm.setDouble(6, trajet.getPrix());
-            stm.setInt(7, trajet.getId());
-
-            int resultat = stm.executeUpdate();
-            if (resultat > 0) {
-                System.out.println("Trajet modifié avec succès !");
-            } else {
-                System.out.println("Erreur lors de la modification du trajet.");
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-    }
-
-
-
-    public boolean delete(Trajet trajet) {
-        String qry = "DELETE FROM `Trajet` WHERE `id`=?";
-        try {
-            PreparedStatement stm = cnx.prepareStatement(qry);
-            stm.setInt(1, trajet.getId());  // Set the ID of the trajet to be deleted
-
-            int affectedRows = stm.executeUpdate();
-            return affectedRows > 0;  // Return true if the trajet was successfully deleted
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());  // Print the error if any
-            return false;  // Return false if there's an issue
-        }
-    }
-
-}
Index: src/main/java/org/example/services/AvisService.java
===================================================================
diff --git a/src/main/java/org/example/services/AvisService.java b/src/main/java/org/example/services/AvisService.java
deleted file mode 100644
--- a/src/main/java/org/example/services/AvisService.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,89 +0,0 @@
-package org.example.services;
-
-import org.example.models.Avis;
-import org.example.utils.DataSource;
-
-import java.sql.Connection;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Statement;
-import java.util.ArrayList;
-import java.util.List;
-
-public class AvisService implements IAvisService<Avis> { // Assuming IService is your generic service interface
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(Avis avis) {
-        String req = "INSERT INTO avis (name, comment, date) VALUES ('" + avis.getName() + "', '" + avis.getComment() + "', '" + avis.getDate() + "')";
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Avis ajouté");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(Avis avis) {
-        String req = "UPDATE avis SET name='" + avis.getName() + "', comment='" + avis.getComment() + "' WHERE id=" + avis.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Avis modifié");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void supprimer(Avis avis) {
-        String req = "DELETE FROM avis WHERE id=" + avis.getId();
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Avis supprimé");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void ajouter(Object o) {
-        // Implement if needed
-    }
-
-    @Override
-    public void modifier(Object o) {
-        // Implement if needed
-    }
-
-    @Override
-    public void supprimer(Object o) {
-        // Implement if needed
-    }
-
-    @Override
-    public List<Avis> rechercher() {
-        List<Avis> avisList = new ArrayList<>();
-
-        String req = "SELECT * FROM avis";
-        try {
-            Statement st = connection.createStatement();
-            ResultSet rs = st.executeQuery(req);
-            while (rs.next()) {
-                avisList.add(new Avis(
-                        rs.getInt("id"),
-                        rs.getString("name"),
-                        rs.getString("comment"),
-                        rs.getDate("date")
-                ));
-            }
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-        return avisList;
-    }
-}
\ No newline at end of file
Index: src/main/java/org/example/services/Organisateur_service.java
===================================================================
diff --git a/src/main/java/org/example/services/Organisateur_service.java b/src/main/java/org/example/services/Organisateur_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Organisateur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,64 +0,0 @@
-package org.example.services;
-
-import org.example.models.Organisateur;
-import org.example.models.Utilisateur;
-import org.example.utils.DataSource;
-
-import java.sql.Connection;
-import java.sql.SQLException;
-import java.sql.Statement;
-
-public class Organisateur_service implements IOrganisateur_service {
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(Organisateur organisateur) {
-        String req = "INSERT INTO organisateur (id, num_badge) VALUES (" + organisateur.getId() + ", '" + organisateur.getNum_badge() + "')";
-
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("organisateur ajouté avec succès.");
-        } catch (SQLException e) {
-            System.out.println("Erreur lors de l'ajout de l'admin : " + e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(Organisateur organisateur, Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "UPDATE organisateur SET num_badge='" + organisateur.getNum_badge() + "' WHERE id=" + organisateur.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "UPDATE utilisateur SET nom='" + utilisateur.getNom() + "', prenom='" + utilisateur.getPrenom() +
-                    "', nom_utilisateur='" + utilisateur.getNom_utilisateur() + "', email='" + utilisateur.getEmail() +
-                    "', mot_de_passe='" + utilisateur.getMot_de_passe() + "' WHERE id=" + utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Organisateur et utilisateur modifiés");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-
-    @Override
-    public void supprimer(Organisateur organisateur, Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "DELETE FROM organisateur WHERE id="+organisateur.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "DELETE FROM utilisateur WHERE id="+utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Organisateur et utilisateur supprime");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-}
Index: src/main/java/org/example/models/event.java
===================================================================
diff --git a/src/main/java/org/example/models/event.java b/src/main/java/org/example/models/event.java
deleted file mode 100644
--- a/src/main/java/org/example/models/event.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,65 +0,0 @@
-package org.example.models;
-
-import java.util.Date;
-
-public class event {
-    private int id;
-    private String nom;
-    private Date date;
-    private String lieu;
-
-    public event(int id, String nom, Date date, String lieu) {
-        this.id = id;
-        this.nom = nom;
-        this.date = date;
-        this.lieu = lieu;
-    }
-
-    public event(String nom, Date date, String lieu) {
-        this.nom = nom;
-        this.date = date;
-        this.lieu = lieu;
-    }
-
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    public String getNom() {
-        return nom;
-    }
-
-    public void setNom(String nom) {
-        this.nom = nom;
-    }
-
-    public Date getDate() {
-        return date;
-    }
-
-    public void setDate(Date date) {
-        this.date = date;
-    }
-
-    public String getLieu() {
-        return lieu;
-    }
-
-    public void setLieu(String lieu) {
-        this.lieu = lieu;
-    }
-
-    @Override
-    public String toString() {
-        return "event{" +
-                "id=" + id +
-                ", nom='" + nom + '\'' +
-                ", date=" + date +
-                ", lieu='" + lieu + '\'' +
-                '}';
-    }
-}
Index: src/main/java/org/example/services/Admin_service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/Admin_service.java b/src/main/java/org/example/services/Admin_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Admin_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,75 +0,0 @@
-package org.example.services;
-
-import org.example.models.Admin;
-import org.example.models.Utilisateur;
-import org.example.models.Trajet;
-import org.example.models.Utilisateur;
-import org.example.utils.DataSource;
-
-import java.sql.*;
-import java.util.ArrayList;
-import java.util.List;
-
-public class Admin_service implements IAdmin_service {
-    Connection connection = DataSource.getInstance().getConnection();
-
-
-    @Override
-    public void ajouter(Admin admin) {
-        String req = "INSERT INTO admin (id, departement) VALUES (" + admin.getId() + ", '" + admin.getDepartement() + "')";
-
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("Admin ajouté avec succès.");
-        } catch (SQLException e) {
-            System.out.println("Erreur lors de l'ajout de l'admin : " + e.getMessage());
-        }
-    }
-
-
-    @Override
-    public void modifier(Admin admin, Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "UPDATE admin SET departement='" + admin.getDepartement() + "' WHERE id=" + admin.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "UPDATE utilisateur SET nom='" + utilisateur.getNom() + "', prenom='" + utilisateur.getPrenom() +
-                    "', nom_utilisateur='" + utilisateur.getNom_utilisateur() + "', email='" + utilisateur.getEmail() +
-                    "', mot_de_passe='" + utilisateur.getMot_de_passe() + "' WHERE id=" + utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Admin et utilisateur modifiés");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-
-
-    @Override
-    public void supprimer(Admin admin , Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "DELETE FROM admin WHERE id="+admin.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "DELETE FROM utilisateur WHERE id="+utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Admin et utilisateur supprime");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-
-
-
-
-
-
-}
Index: src/main/java/org/example/services/Ievent.java
===================================================================
diff --git a/src/main/java/org/example/services/Ievent.java b/src/main/java/org/example/services/Ievent.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Ievent.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,15 +0,0 @@
-package org.example.services;
-
-import org.example.models.event;
-
-import java.util.List;
-
-public interface Ievent {
-    void ajouter(event event);
-
-    void modifier(event event);
-
-    void supprimer(event event);
-
-    List<event> afficher();
-}
Index: src/main/java/org/example/controllers/Login.java
===================================================================
diff --git a/src/main/java/org/example/controllers/Login.java b/src/main/java/org/example/controllers/Login.java
deleted file mode 100644
--- a/src/main/java/org/example/controllers/Login.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,4 +0,0 @@
-package org.example.controllers;
-
-public class Login {
-}
Index: src/main/java/org/example/tests/MainGUI.java
===================================================================
diff --git a/src/main/java/org/example/tests/MainGUI.java b/src/main/java/org/example/tests/MainGUI.java
deleted file mode 100644
--- a/src/main/java/org/example/tests/MainGUI.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,26 +0,0 @@
-package org.example.tests;
-
-import javafx.application.Application;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.stage.Stage;
-
-import java.io.IOException;
-
-public class MainGUI extends Application {
-
-    public static void main(String[] args) {
-        launch(args);
-    }
-
-    @Override
-    public void start(Stage primaryStage) throws IOException {
-        FXMLLoader loader = new FXMLLoader(getClass().getResource("/Login.fxml"));
-        Parent root = loader.load();
-        Scene scene = new Scene(root);
-        primaryStage.setScene(scene);
-        primaryStage.setTitle("Smart MOBY");
-        primaryStage.show();
-    }
-}
Index: src/main/java/org/example/services/IAvisService.java
===================================================================
diff --git a/src/main/java/org/example/services/IAvisService.java b/src/main/java/org/example/services/IAvisService.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IAvisService.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,21 +0,0 @@
-package org.example.services;
-
-import org.example.models.Avis;
-
-import java.util.List;
-
-public interface IAvisService<A> {
-    void ajouter(Avis avis);
-
-    void modifier(Avis avis);
-
-    void supprimer(Avis avis);
-
-    void ajouter(Object o);
-
-    void modifier(Object o);
-
-    void supprimer(Object o);
-
-    List<Avis> rechercher();
-}
Index: src/main/java/org/example/services/IConducteur_service.java
===================================================================
diff --git a/src/main/java/org/example/services/IConducteur_service.java b/src/main/java/org/example/services/IConducteur_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IConducteur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,12 +0,0 @@
-package org.example.services;
-
-import org.example.models.Conducteur;
-import org.example.models.Utilisateur;
-
-public interface IConducteur_service {
-    void ajouter(Conducteur conducteur);
-
-    void modifier(Conducteur conducteur , Utilisateur utilisateur);
-
-    void supprimer(Conducteur conducteur , Utilisateur utilisateur);
-}
Index: src/main/java/org/example/models/Client.java
===================================================================
diff --git a/src/main/java/org/example/models/Client.java b/src/main/java/org/example/models/Client.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Client.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,32 +0,0 @@
-package org.example.models;
-
-public class Client extends Utilisateur{
-    private int id_client;
-    
-
-    public Client(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_client) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_client = id_client;
-    }
-
-    public Client(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_client) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_client = id_client;
-    }
-
-
-    public int getId_client() {
-        return id_client;
-    }
-
-    public void setId_client(int id_client) {
-        this.id_client = id_client;
-    }
-
-    @Override
-    public String toString() {
-        return "Client{" +
-                "id_client=" + id_client +
-                '}';
-    }
-}
Index: src/main/java/org/example/services/event_serv.java
===================================================================
diff --git a/src/main/java/org/example/services/event_serv.java b/src/main/java/org/example/services/event_serv.java
deleted file mode 100644
--- a/src/main/java/org/example/services/event_serv.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,115 +0,0 @@
-package org.example.services;
-
-import org.example.models.event;
-import org.example.utils.DataSource;
-
-import java.sql.*;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.List;
-
-
-public class event_serv implements Ievent {
-    Connection connection = DataSource.getInstance().getConnection();
-    @Override
-    public void ajouter(event event) {
-        String req = "INSERT INTO evenment (nom, date, lieu) VALUES (?, ?, ?)";
-        try {
-            PreparedStatement pst = connection.prepareStatement(req);
-            pst.setString(1, event.getNom());
-
-            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
-            String formattedDate = dateFormat.format(event.getDate());
-            pst.setString(2, formattedDate);
-
-            pst.setString(3, event.getLieu());
-
-            pst.executeUpdate();
-            System.out.println("Événement ajouté");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(event event) {
-        // Requête SQL avec des paramètres pour éviter l'injection SQL
-        String req = "UPDATE evenment SET nom=?, date=?, lieu=? WHERE id_event=?";
-
-        try (PreparedStatement pst = connection.prepareStatement(req)) {
-            // Remplir les paramètres de la requête
-            pst.setString(1, event.getNom());  // Nom de l'événement
-            pst.setDate(2, new java.sql.Date(event.getDate().getTime()));  // Date de l'événement
-            pst.setString(3, event.getLieu());  // Lieu de l'événement
-            pst.setInt(4, event.getId());  // ID de l'événement (utilisé pour la clause WHERE)
-
-            // Exécuter la mise à jour
-            int rowsAffected = pst.executeUpdate();
-
-            // Vérifier si des lignes ont été modifiées
-            if (rowsAffected > 0) {
-                System.out.println("Événement modifié avec succès");
-            } else {
-                System.out.println("Aucun événement trouvé avec cet ID");
-            }
-
-        } catch (SQLException e) {
-            System.out.println("Erreur lors de la modification de l'événement : " + e.getMessage());
-        }
-    }
-
-
-    @Override
-    public void supprimer(event event) {
-        // Requête SQL avec un paramètre pour éviter l'injection SQL
-        String req = "DELETE FROM evenment WHERE id_event=?";
-
-        try (PreparedStatement pst = connection.prepareStatement(req)) {
-            // Définir le paramètre pour la requête
-            pst.setInt(1, event.getId());  // L'id de l'utilisateur à supprimer
-
-            // Exécuter la requête
-            int rowsAffected = pst.executeUpdate();
-
-            // Vérifier si une ligne a été supprimée
-            if (rowsAffected > 0) {
-                System.out.println("event supprimé avec succès");
-            } else {
-                System.out.println("Aucun event trouvé avec cet ID");
-            }
-
-        } catch (SQLException e) {
-            // Gérer les erreurs SQL
-            System.out.println("Erreur lors de la suppression de l'evenment : " + e.getMessage());
-        }
-    }
-
-
-    @Override
-    public List<event> afficher() {
-        List<event> events = new ArrayList<>();
-        String req = "SELECT * FROM evenment";
-
-        try (Statement st = connection.createStatement();
-             ResultSet rs = st.executeQuery(req)) {
-
-            // Parcourir les résultats de la requête
-            while (rs.next()) {
-                // Ajouter chaque événement à la liste
-                events.add(new event(
-                        rs.getInt("id_event"),  // ID de l'événement
-                        rs.getString("nom"),    // Nom de l'événement
-                        rs.getDate("date"),     // Date de l'événement
-                        rs.getString("lieu")    // Lieu de l'événement
-                ));
-            }
-
-        } catch (SQLException e) {
-            // Gérer l'exception SQL en affichant un message d'erreur
-            System.out.println("Erreur lors de la recherche des événements : " + e.getMessage());
-        }
-
-        return events;
-    }
-
-}
Index: src/main/resources/AcceuilUser.fxml
===================================================================
diff --git a/src/main/resources/AcceuilUser.fxml b/src/main/resources/AcceuilUser.fxml
deleted file mode 100644
--- a/src/main/resources/AcceuilUser.fxml	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import java.lang.String?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.shape.Line?>
-<?import javafx.scene.text.Font?>
-
-<AnchorPane prefHeight="609.0" prefWidth="919.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.controllers.AcceuilUser">
-   <children>
-      <AnchorPane layoutX="-4.0" prefHeight="610.0" prefWidth="327.0" styleClass="left-form" stylesheets="@AcceuilUser.css">
-         <children>
-            <ImageView fitHeight="150.0" fitWidth="200.0" layoutX="56.0" layoutY="38.0" pickOnBounds="true" preserveRatio="true" />
-            <ImageView fitHeight="104.0" fitWidth="107.0" layoutX="104.0" layoutY="24.0" pickOnBounds="true" preserveRatio="true">
-               <image>
-                  <Image url="@user.png" />
-               </image>
-            </ImageView>
-            <Label layoutX="108.0" layoutY="128.0" text="Bienvenue">
-               <font>
-                  <Font name="Tahoma" size="24.0" />
-               </font>
-            </Label>
-            <Line endX="100.0" layoutX="156.0" layoutY="176.0" startX="-100.0" />
-            <Button layoutX="46.0" layoutY="212.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" text="Acceuil">
-               <styleClass>
-                  <String fx:value="nav-btn" />
-                  <String fx:value="nav-btn" />
-               </styleClass></Button>
-            <Button layoutX="47.0" layoutY="255.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Transports" />
-            <Button layoutX="47.0" layoutY="299.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Services" />
-            <Button layoutX="47.0" layoutY="343.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Evénements" />
-            <Button layoutX="47.0" layoutY="389.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Blog" />
-            <Button layoutX="47.0" layoutY="435.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Paramétres" />
-            <Button layoutX="47.0" layoutY="483.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Se Déconnecter" />
-            <Button layoutX="47.0" layoutY="527.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Quitter" />
-         </children>
-      </AnchorPane>
-   </children>
-</AnchorPane>
Index: src/main/java/org/example/models/Vehicule.java
===================================================================
diff --git a/src/main/java/org/example/models/Vehicule.java b/src/main/java/org/example/models/Vehicule.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Vehicule.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,30 +0,0 @@
-package org.example.models;
-
-public class Vehicule {
-    private int id,capacite;
-    private String type,statut;
-    private boolean dispo;
-    public Vehicule() {
-    }
-
-    public Vehicule(int id,String type, int capacite,  String statut, boolean dispo) {
-        this.id=id;
-        this.type = type;
-        this.capacite = capacite;
-        this.statut = statut;
-        this.dispo = dispo;
-
-    }
-    public int getId() { return id; }
-    public void setId(int id) { this.id = id; }
-    public int getCapacite() { return capacite; }
-    public void setCapacite(int capacite) { this.capacite = capacite; }
-    public String getType() { return type; }
-    public void setType(String type) { this.type = type; }
-    public String getStatut() { return statut; }
-    public void setStatut(String statut) { this.statut = statut; }
-    public boolean isDispo() { return dispo; }
-    public void setDispo(boolean dispo) { this.dispo = dispo; }
-    @Override
-    public String toString() { return type + " " + capacite + " " + statut; }
-}
Index: src/main/java/org/example/models/Trajet.java
===================================================================
diff --git a/src/main/java/org/example/models/Trajet.java b/src/main/java/org/example/models/Trajet.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Trajet.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,64 +0,0 @@
-package org.example.models;
-import java.sql.Timestamp;
-
-import java.util.Date;
-
-public class Trajet {
-    private int id;
-    private String pointD;
-    private String pointA;
-    private Timestamp dateD;
-    private Timestamp dateA;
-    private double distance;
-    private double prix;
-
-    // Constructeur par défaut
-    public Trajet() {}
-
-    // Constructeur avec paramètres
-    public Trajet(int id, String pointD, String pointA, Timestamp dateD, Timestamp dateA, double distance, double prix) {
-        this.id = id;
-        this.pointD = pointD;
-        this.pointA = pointA;
-        this.dateD = dateD;
-        this.dateA = dateA;
-        this.distance = distance;
-        this.prix = prix;
-    }
-
-    // Getters et Setters
-    public int getId() { return id; }
-    public void setId(int id) { this.id = id; }
-
-    public String getPointD() { return pointD; }
-    public void setPointD(String pointD) { this.pointD = pointD; }
-
-    public String getPointA() { return pointA; }
-    public void setPointA(String pointA) { this.pointA = pointA; }
-
-    public Timestamp getDateD() { return dateD; }
-    public void setDateD(Timestamp dateD) { this.dateD = dateD; }
-
-    public Timestamp getDateA() { return dateA; }
-    public void setDateA(Timestamp dateA) { this.dateA = dateA; }
-
-    public double getDistance() { return distance; }
-    public void setDistance(double distance) { this.distance = distance; }
-
-    public double getPrix() { return prix; }
-    public void setPrix(double prix) { this.prix = prix; }
-
-    // Méthode toString()
-    @Override
-    public String toString() {
-        return "Trajet{" +
-                "id=" + id +
-                ", pointD='" + pointD + '\'' +
-                ", pointA='" + pointA + '\'' +
-                ", dateD=" + dateD +
-                ", dateA=" + dateA +
-                ", distance=" + distance +
-                ", prix=" + prix +
-                '}';
-    }
-}
Index: src/main/resources/Login.fxml
===================================================================
diff --git a/src/main/resources/Login.fxml b/src/main/resources/Login.fxml
deleted file mode 100644
--- a/src/main/resources/Login.fxml	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.PasswordField?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.shape.Line?>
-<?import javafx.scene.text.Font?>
-
-<AnchorPane prefHeight="509.0" prefWidth="898.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.controllers.AcceuilUser">
-   <children>
-      <AnchorPane layoutX="-4.0" prefHeight="508.0" prefWidth="327.0" styleClass="left-form" stylesheets="@AcceuilUser.css">
-         <children>
-            <ImageView fitHeight="163.0" fitWidth="249.0" layoutX="39.0" layoutY="96.0" pickOnBounds="true" preserveRatio="true">
-               <image>
-                  <Image url="@LOGO_pi.png" />
-               </image>
-            </ImageView>
-            <Line endX="159.4000244140625" endY="1.52587890625E-5" layoutX="133.0" layoutY="255.0" startX="-100.0" />
-         </children>
-      </AnchorPane>
-      <ImageView fitHeight="102.0" fitWidth="104.0" layoutX="559.0" layoutY="14.0" pickOnBounds="true" preserveRatio="true">
-         <image>
-            <Image url="@login2.png" />
-         </image>
-      </ImageView>
-      <Label layoutX="482.0" layoutY="116.0" stylesheets="@AcceuilUser.css" text="Content de vous revoir !" textFill="#4f8c7d">
-         <font>
-            <Font name="Tahoma" size="24.0" />
-         </font>
-      </Label>
-      <TextField layoutX="358.0" layoutY="198.0" prefHeight="43.0" prefWidth="502.0" promptText="Nom D'utilisateur" styleClass="text-field" stylesheets="@AcceuilUser.css" />
-      <PasswordField layoutX="359.0" layoutY="297.0" prefHeight="43.0" prefWidth="502.0" promptText="Mot De Passe" styleClass="text-field" stylesheets="@AcceuilUser.css" />
-      <Button layoutX="359.0" layoutY="373.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="182.0" styleClass="login-btn" stylesheets="@AcceuilUser.css" text="Se Connecter">
-         <font>
-            <Font name="Tahoma" size="14.0" />
-         </font>
-      </Button>
-      <Button layoutX="497.0" layoutY="437.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="196.0" styleClass="login-btn" stylesheets="@AcceuilUser.css" text="Créer un nouveau compte">
-         <font>
-            <Font name="Tahoma" size="14.0" />
-         </font>
-      </Button>
-      <Button layoutX="677.0" layoutY="373.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="182.0" styleClass="login-btn" stylesheets="@AcceuilUser.css" text="Mot De Passe Oublié">
-         <font>
-            <Font name="Tahoma" size="14.0" />
-         </font>
-      </Button>
-      <Button layoutX="861.0" layoutY="14.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="26.0" styleClass="login-btn" stylesheets="@AcceuilUser.css" text="X">
-         <font>
-            <Font name="Tahoma" size="14.0" />
-         </font>
-      </Button>
-   </children>
-</AnchorPane>
Index: src/main/java/org/example/services/Client_service.java
===================================================================
diff --git a/src/main/java/org/example/services/Client_service.java b/src/main/java/org/example/services/Client_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/Client_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,62 +0,0 @@
-package org.example.services;
-
-import org.example.models.Client;
-import org.example.models.Utilisateur;
-import org.example.utils.DataSource;
-
-import java.sql.Connection;
-import java.sql.SQLException;
-import java.sql.Statement;
-
-public class Client_service implements IClient_service {
-    Connection connection = DataSource.getInstance().getConnection();
-
-    @Override
-    public void ajouter(Client client) {
-        String req = "INSERT INTO client (id) VALUES (" + client.getId() + ")";
-
-        try {
-            Statement st = connection.createStatement();
-            st.executeUpdate(req);
-            System.out.println("client ajouté avec succès.");
-        } catch (SQLException e) {
-            System.out.println("Erreur lors de l'ajout de le client : " + e.getMessage());
-        }
-    }
-
-    @Override
-    public void modifier(Client client, Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-
-            String req2 = "UPDATE utilisateur SET nom='" + utilisateur.getNom() + "', prenom='" + utilisateur.getPrenom() +
-                    "', nom_utilisateur='" + utilisateur.getNom_utilisateur() + "', email='" + utilisateur.getEmail() +
-                    "', mot_de_passe='" + utilisateur.getMot_de_passe() + "' WHERE id=" + utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Client et utilisateur modifiés");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-
-    @Override
-    public void supprimer(Client client, Utilisateur utilisateur) {
-        try {
-            Statement st = connection.createStatement();
-
-            String req1 = "DELETE FROM client WHERE id="+client.getId();
-            st.executeUpdate(req1);
-
-            String req2 = "DELETE FROM utilisateur WHERE id="+utilisateur.getId();
-            st.executeUpdate(req2);
-
-            System.out.println("Client et utilisateur supprime");
-        } catch (SQLException e) {
-            System.out.println(e.getMessage());
-        }
-
-    }
-}
Index: src/main/java/org/example/controllers/AcceuilUser.java
===================================================================
diff --git a/src/main/java/org/example/controllers/AcceuilUser.java b/src/main/java/org/example/controllers/AcceuilUser.java
deleted file mode 100644
--- a/src/main/java/org/example/controllers/AcceuilUser.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,15 +0,0 @@
-package org.example.controllers;
-
-import javafx.fxml.FXML;
-
-import javafx.fxml.Initializable;
-import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
-
-import java.net.URL;
-import java.util.ResourceBundle;
-
-public class AcceuilUser  {
-
-
-}
Index: src/main/java/org/example/services/IOrganisateur_service.java
===================================================================
diff --git a/src/main/java/org/example/services/IOrganisateur_service.java b/src/main/java/org/example/services/IOrganisateur_service.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IOrganisateur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,11 +0,0 @@
-package org.example.services;
-
-import org.example.models.Organisateur;
-import org.example.models.Utilisateur;
-
-public interface IOrganisateur_service {
-    public void ajouter (Organisateur organisateur);
-    public void modifier (Organisateur organisateur , Utilisateur utilisateur);
-    public void supprimer (Organisateur organisateur, Utilisateur utilisateur);
-
-}
Index: src/main/java/org/example/models/Blog.java
===================================================================
diff --git a/src/main/java/org/example/models/Blog.java b/src/main/java/org/example/models/Blog.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Blog.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,66 +0,0 @@
-package org.example.models;
-
-import java.util.Date;
-
-public class Blog {
-
-    private int id;
-    private String title;
-    private String content;
-    private Date date;
-
-
-    public Blog(int id, String title, String content, Date date) {
-        this.id = id;
-        this.title = title;
-        this.content = content;
-        this.date = date;
-
-    }
-
-    public Blog(String title, String content, Date date) {
-        this.title = title;
-        this.content = content;
-        this.date = date;
-    }
-
-    public Blog() {
-
-    }
-
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    public String getTitle() {
-        return title;
-    }
-
-    public void setTitle(String nom) {
-        this.title = nom;
-    }
-
-    public String getContent() {
-        return content;
-    }
-
-    public void setContent(String prenom) {this.content = prenom;}
-
-    public Date getDate() {return date;}
-
-    public void setDate(Date date) {this.date = date;}
-
-    @Override
-    public String toString() {
-        return "Personne{" +
-                "id=" + id +
-                ", title='" + title + '\'' +
-                ", content='" + content + '\'' +
-                ", date='" + date + '\'' +
-                '}';
-    }
-}
\ No newline at end of file
Index: src/main/java/org/example/models/fedback.java
===================================================================
diff --git a/src/main/java/org/example/models/fedback.java b/src/main/java/org/example/models/fedback.java
deleted file mode 100644
--- a/src/main/java/org/example/models/fedback.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,52 +0,0 @@
-package org.example.models;
-
-public class fedback {
-        private int id;
-        private String commentaire;
-        private int note;
-
-    public fedback(int id, String commentaire, int note) {
-        this.id = id;
-        this.commentaire = commentaire;
-        this.note = note;
-
-    }
-
-    public fedback(String commentaire, int note) {
-        this.commentaire = commentaire;
-        this.note = note;
-    }
-
-    public String getCommentaire() {
-        return commentaire;
-    }
-
-    public void setCommentaire(String commentaire) {
-        this.commentaire = commentaire;
-    }
-
-    public int getNote() {
-        return note;
-    }
-
-    public void setNote(int note) {
-        this.note = note;
-    }
-
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
-    @Override
-    public String toString() {
-        return "fedback{" +
-                "id=" + id +
-                ", commentaire='" + commentaire + '\'' +
-                ", note=" + note +
-                '}';
-    }
-}
Index: src/main/resources/AcceuilAdmin.fxml
===================================================================
diff --git a/src/main/resources/AcceuilAdmin.fxml b/src/main/resources/AcceuilAdmin.fxml
deleted file mode 100644
--- a/src/main/resources/AcceuilAdmin.fxml	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import java.lang.String?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.shape.Line?>
-<?import javafx.scene.text.Font?>
-
-<AnchorPane prefHeight="609.0" prefWidth="919.0" xmlns="http://javafx.com/javafx/23.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.controllers.AcceuilUser">
-   <children>
-      <AnchorPane layoutX="-4.0" prefHeight="610.0" prefWidth="327.0" styleClass="left-form" stylesheets="@AcceuilUser.css">
-         <children>
-            <ImageView fitHeight="150.0" fitWidth="200.0" layoutX="56.0" layoutY="38.0" pickOnBounds="true" preserveRatio="true" />
-            <ImageView fitHeight="104.0" fitWidth="107.0" layoutX="104.0" layoutY="24.0" pickOnBounds="true" preserveRatio="true">
-               <image>
-                  <Image url="@user.png" />
-               </image>
-            </ImageView>
-            <Label layoutX="108.0" layoutY="128.0" text="Bienvenue">
-               <font>
-                  <Font name="Tahoma" size="24.0" />
-               </font>
-            </Label>
-            <Line endX="100.0" layoutX="156.0" layoutY="176.0" startX="-100.0" />
-            <Button layoutX="46.0" layoutY="212.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" text="Acceuil">
-               <styleClass>
-                  <String fx:value="nav-btn" />
-                  <String fx:value="nav-btn" />
-               </styleClass>
-            </Button>
-            <Button layoutX="47.0" layoutY="255.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Transports" />
-            <Button layoutX="47.0" layoutY="299.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Services" />
-            <Button layoutX="47.0" layoutY="343.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Evénements" />
-            <Button layoutX="47.0" layoutY="389.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Blog" />
-            <Button layoutX="47.0" layoutY="435.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Paramétres" />
-            <Button layoutX="47.0" layoutY="483.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Se Déconnecter" />
-            <Button layoutX="47.0" layoutY="527.0" mnemonicParsing="false" prefHeight="26.0" prefWidth="218.0" styleClass="nav-btn" text="Quitter" />
-         </children>
-      </AnchorPane>
-   </children>
-</AnchorPane>
Index: src/main/java/org/example/controllers/AcceuilAdmin.java
===================================================================
diff --git a/src/main/java/org/example/controllers/AcceuilAdmin.java b/src/main/java/org/example/controllers/AcceuilAdmin.java
deleted file mode 100644
--- a/src/main/java/org/example/controllers/AcceuilAdmin.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,4 +0,0 @@
-package org.example.controllers;
-
-public class AcceuilAdmin {
-}
Index: src/main/java/org/example/services/IBlogService.java
===================================================================
diff --git a/src/main/java/org/example/services/IBlogService.java b/src/main/java/org/example/services/IBlogService.java
deleted file mode 100644
--- a/src/main/java/org/example/services/IBlogService.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,19 +0,0 @@
-package org.example.services;
-
-import org.example.models.Blog;
-
-import java.util.List;
-
-public interface IBlogService<T> {
-
-    void ajouter(Blog blog);
-
-    void modifier(Blog blog);
-
-    void supprimer(Blog blog);
-
-    void ajouter(T t);
-    void modifier(T t);
-    void supprimer(T t);
-    List<T> rechercher();
-}
\ No newline at end of file
Index: src/main/java/org/example/models/Organisateur.java
===================================================================
diff --git a/src/main/java/org/example/models/Organisateur.java b/src/main/java/org/example/models/Organisateur.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Organisateur.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ /dev/null	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
@@ -1,55 +0,0 @@
-package org.example.models;
-import java.util.ArrayList;
-import java.util.List;
-
-
-public class Organisateur extends Utilisateur{
-    private int id_organisateur;
-    private int num_badge;
-
-    public Organisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_organisateur, int num_badge) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_organisateur = id_organisateur;
-        this.num_badge = num_badge;
-    }
-
-    public Organisateur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int id_organisateur, int num_badge) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.id_organisateur = id_organisateur;
-        this.num_badge = num_badge;
-    }
-
-    public Organisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int num_badge) {
-        super(id, nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.num_badge = num_badge;
-    }
-
-    public Organisateur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role, int num_badge) {
-        super(nom, prenom, nom_utilisateur, email, mot_de_passe, role);
-        this.num_badge = num_badge;
-    }
-
-    public int getId_organisateur() {
-        return id_organisateur;
-    }
-
-    public void setId_organisateur(int id_organisateur) {
-        this.id_organisateur = id_organisateur;
-    }
-
-    public int getNum_badge() {
-        return num_badge;
-    }
-
-    public void setNum_badge(int num_badge) {
-        this.num_badge = num_badge;
-    }
-
-    @Override
-    public String toString() {
-        return "Organisateur{" +
-                "id_organisateur=" + id_organisateur +
-                ", num_badge=" + num_badge +
-                '}';
-    }
-}
Index: src/main/java/org/example/models/Utilisateur.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport java.util.Arrays;\r\n\r\npublic class Utilisateur {\r\n    private int id;\r\n    private String nom;\r\n    private String prenom;\r\n    private String nom_utilisateur;\r\n    private String email;\r\n    private String mot_de_passe;\r\n    private Role role;\r\n    public Utilisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role) {\r\n        this.id = id;\r\n        this.nom = nom;\r\n        this.prenom = prenom;\r\n        this.nom_utilisateur = nom_utilisateur;\r\n        this.email = email;\r\n        this.mot_de_passe = mot_de_passe;\r\n        this.role = role;\r\n    }\r\n    public Utilisateur( String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role) {\r\n        this.nom = nom;\r\n        this.prenom = prenom;\r\n        this.nom_utilisateur = nom_utilisateur;\r\n        this.email = email;\r\n        this.mot_de_passe = mot_de_passe;\r\n        this.role = role;\r\n    }\r\n\r\n    public Utilisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe) {\r\n        this.id = id;\r\n        this.nom = nom;\r\n        this.prenom = prenom;\r\n        this.nom_utilisateur = nom_utilisateur;\r\n        this.email = email;\r\n        this.mot_de_passe = mot_de_passe;\r\n    }\r\n\r\n    public Utilisateur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe) {\r\n        this.nom = nom;\r\n        this.prenom = prenom;\r\n        this.nom_utilisateur = nom_utilisateur;\r\n        this.email = email;\r\n        this.mot_de_passe = mot_de_passe;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getNom() {\r\n        return nom;\r\n    }\r\n\r\n    public void setNom(String nom) {\r\n        this.nom = nom;\r\n    }\r\n\r\n    public String getPrenom() {\r\n        return prenom;\r\n    }\r\n\r\n    public void setPrenom(String prenom) {\r\n        this.prenom = prenom;\r\n    }\r\n\r\n    public String getNom_utilisateur() {\r\n        return nom_utilisateur;\r\n    }\r\n\r\n    public void setNom_utilisateur(String nom_utilisateur) {\r\n        this.nom_utilisateur = nom_utilisateur;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n\r\n\r\n    public String getMot_de_passe() {\r\n        return mot_de_passe;\r\n    }\r\n\r\n    public void setMot_de_passe(String mot_de_passe) {\r\n        this.mot_de_passe = mot_de_passe;\r\n    }\r\n\r\n    public Role getRole() {\r\n        return role;\r\n    }\r\n\r\n    public void setRole(Role role) {\r\n        this.role = role;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Utilisateur{\" +\r\n                \"id=\" + id +\r\n                \", nom='\" + nom + '\\'' +\r\n                \", prenom='\" + prenom + '\\'' +\r\n                \", nom_utilisateur='\" + nom_utilisateur + '\\'' +\r\n                \", email='\" + email + '\\'' +\r\n                \", mot_de_passe='\" + mot_de_passe + '\\'' +\r\n                \", role=\" + role +\r\n                '}';\r\n    }\r\n\r\n    public enum Role {\r\n        CLIENT,\r\n        ADMIN,\r\n        ORGANISATEUR,\r\n        CONDUCTEUR\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/Utilisateur.java b/src/main/java/org/example/models/Utilisateur.java
--- a/src/main/java/org/example/models/Utilisateur.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/models/Utilisateur.java	(date 1739983751617)
@@ -1,47 +1,28 @@
 package org.example.models;
 
-import java.util.Arrays;
-
 public class Utilisateur {
     private int id;
     private String nom;
     private String prenom;
     private String nom_utilisateur;
     private String email;
+    private byte[] photo;
     private String mot_de_passe;
-    private Role role;
-    public Utilisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role) {
+    public Utilisateur(int id, String nom, String prenom, String nom_utilisateur, String email, byte[] photo, String mot_de_passe) {
         this.id = id;
         this.nom = nom;
         this.prenom = prenom;
         this.nom_utilisateur = nom_utilisateur;
         this.email = email;
-        this.mot_de_passe = mot_de_passe;
-        this.role = role;
-    }
-    public Utilisateur( String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe, Role role) {
-        this.nom = nom;
-        this.prenom = prenom;
-        this.nom_utilisateur = nom_utilisateur;
-        this.email = email;
+        this.photo = photo;
         this.mot_de_passe = mot_de_passe;
-        this.role = role;
     }
-
-    public Utilisateur(int id, String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe) {
-        this.id = id;
+    public Utilisateur( String nom, String prenom, String nom_utilisateur, String email, byte[] photo, String mot_de_passe) {
         this.nom = nom;
         this.prenom = prenom;
         this.nom_utilisateur = nom_utilisateur;
         this.email = email;
-        this.mot_de_passe = mot_de_passe;
-    }
-
-    public Utilisateur(String nom, String prenom, String nom_utilisateur, String email, String mot_de_passe) {
-        this.nom = nom;
-        this.prenom = prenom;
-        this.nom_utilisateur = nom_utilisateur;
-        this.email = email;
+        this.photo = photo;
         this.mot_de_passe = mot_de_passe;
     }
 
@@ -86,6 +67,13 @@
     }
 
 
+    public byte[] getPhoto() {
+        return photo;
+    }
+
+    public void setPhoto(byte[] photo) {
+        this.photo = photo;
+    }
 
     public String getMot_de_passe() {
         return mot_de_passe;
@@ -95,14 +83,6 @@
         this.mot_de_passe = mot_de_passe;
     }
 
-    public Role getRole() {
-        return role;
-    }
-
-    public void setRole(Role role) {
-        this.role = role;
-    }
-
     @Override
     public String toString() {
         return "Utilisateur{" +
@@ -111,16 +91,8 @@
                 ", prenom='" + prenom + '\'' +
                 ", nom_utilisateur='" + nom_utilisateur + '\'' +
                 ", email='" + email + '\'' +
+                ", photo='" + photo + '\'' +
                 ", mot_de_passe='" + mot_de_passe + '\'' +
-                ", role=" + role +
                 '}';
     }
-
-    public enum Role {
-        CLIENT,
-        ADMIN,
-        ORGANISATEUR,
-        CONDUCTEUR
-    }
-
 }
Index: src/main/java/org/example/services/Utilisateur_service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services;\r\n\r\nimport org.example.models.*;\r\nimport org.example.utils.DataSource;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Utilisateur_service implements IUtilisateur_service {\r\n    Connection connection = DataSource.getInstance().getConnection();\r\n\r\n    @Override\r\n    public void ajouter(Utilisateur utilisateur) {\r\n        String req = \"INSERT INTO utilisateur (nom, prenom, nom_utilisateur, email, mot_de_passe, role) VALUES ('\"\r\n                + utilisateur.getNom() + \"', '\" + utilisateur.getPrenom() + \"', '\" + utilisateur.getNom_utilisateur()\r\n                + \"', '\" + utilisateur.getEmail() + \"',  '\" + utilisateur.getMot_de_passe() + \"', '\" + utilisateur.getRole() + \"')\";\r\n\r\n        try {\r\n            PreparedStatement pst = connection.prepareStatement(req, Statement.RETURN_GENERATED_KEYS);\r\n            pst.executeUpdate();\r\n\r\n            ResultSet rs = pst.getGeneratedKeys();\r\n            if (rs.next()) {\r\n                int userId = rs.getInt(1);\r\n\r\n                if (utilisateur.getRole() == Utilisateur.Role.CONDUCTEUR) {\r\n                    Conducteur_service c = new Conducteur_service();\r\n                    c.ajouter(new Conducteur(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),\r\n                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(), userId, 1234));\r\n                }\r\n\r\n                if (utilisateur.getRole() == Utilisateur.Role.ADMIN) {\r\n                    Admin_service a = new Admin_service();\r\n                    a.ajouter(new Admin(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),\r\n                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(), \"HR\"));\r\n                }\r\n\r\n                if(utilisateur.getRole() == Utilisateur.Role.ORGANISATEUR){\r\n                    Organisateur_service o = new Organisateur_service();\r\n                    o.ajouter(new Organisateur(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),\r\n                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(),400));\r\n                }\r\n\r\n                if(utilisateur.getRole() == Utilisateur.Role.CLIENT){\r\n                    Client_service c = new Client_service();\r\n                    c.ajouter(new Client(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),\r\n                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(),userId));\r\n                }\r\n\r\n            }\r\n\r\n            System.out.println(\"Utilisateur ajouté avec succès.\");\r\n        } catch (SQLException e) {\r\n            System.out.println(\"Erreur lors de l'ajout : \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void modifier(Utilisateur utilisateur) {\r\n        // Préparer la requête de mise à jour de l'utilisateur sans toucher au rôle\r\n        String req = \"UPDATE utilisateur SET nom='\" + utilisateur.getNom() + \"' ,prenom='\" + utilisateur.getPrenom() + \"' ,nom_utilisateur='\" + utilisateur.getNom_utilisateur() + \"' ,email='\" + utilisateur.getEmail() + \"'  ,mot_de_passe='\" + utilisateur.getMot_de_passe() + \"' WHERE id=\" + utilisateur.getId();\r\n\r\n        try {\r\n            Statement st = connection.createStatement();\r\n            st.executeUpdate(req);  // Exécution de la requête pour l'utilisateur\r\n            System.out.println(\"Utilisateur modifié\");\r\n\r\n\r\n\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void supprimer(Utilisateur utilisateur) {\r\n        String req = \"DELETE FROM utilisateur WHERE id=\" + utilisateur.getId();\r\n        try {\r\n            Statement st = connection.createStatement();\r\n            st.executeUpdate(req);\r\n            System.out.println(\"Utilisateur supprimée\");\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public List<Utilisateur> afficher() {\r\n        List<Utilisateur> utilisateurs = new ArrayList<>();\r\n\r\n        String req = \"SELECT * FROM utilisateur\";\r\n        try {\r\n            Statement st = connection.createStatement();\r\n            ResultSet rs = st.executeQuery(req);\r\n            while (rs.next()) {\r\n                utilisateurs.add(new Utilisateur(rs.getInt(\"id\"), rs.getString(\"nom\"), rs.getString(\"prenom\"), rs.getString(\"nom_utilisateur\"), rs.getString(\"email\"), rs.getString(\"mot_de_passe\"), Utilisateur.Role.valueOf(rs.getString(\"role\").toUpperCase())));\r\n\r\n\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        return utilisateurs;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/Utilisateur_service.java b/src/main/java/org/example/services/Utilisateur_service.java
--- a/src/main/java/org/example/services/Utilisateur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/services/Utilisateur_service.java	(date 1739983751619)
@@ -1,9 +1,12 @@
 package org.example.services;
 
-import org.example.models.*;
+import org.example.models.Utilisateur;
 import org.example.utils.DataSource;
 
-import java.sql.*;
+import java.sql.Connection;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -12,72 +15,31 @@
 
     @Override
     public void ajouter(Utilisateur utilisateur) {
-        String req = "INSERT INTO utilisateur (nom, prenom, nom_utilisateur, email, mot_de_passe, role) VALUES ('"
-                + utilisateur.getNom() + "', '" + utilisateur.getPrenom() + "', '" + utilisateur.getNom_utilisateur()
-                + "', '" + utilisateur.getEmail() + "',  '" + utilisateur.getMot_de_passe() + "', '" + utilisateur.getRole() + "')";
-
+        String req = "INSERT INTO utilisateur (nom, prenom,nom_utilisateur,email,photo,mot_de_passe) VALUES ('"+utilisateur.getNom()+"', '"+utilisateur.getPrenom()+"' , '"+utilisateur.getNom_utilisateur()+"' , '"+utilisateur.getEmail()+"'  , '"+utilisateur.getPhoto()+"' , '"+utilisateur.getMot_de_passe()+"' )";
         try {
-            PreparedStatement pst = connection.prepareStatement(req, Statement.RETURN_GENERATED_KEYS);
-            pst.executeUpdate();
-
-            ResultSet rs = pst.getGeneratedKeys();
-            if (rs.next()) {
-                int userId = rs.getInt(1);
-
-                if (utilisateur.getRole() == Utilisateur.Role.CONDUCTEUR) {
-                    Conducteur_service c = new Conducteur_service();
-                    c.ajouter(new Conducteur(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),
-                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(), userId, 1234));
-                }
-
-                if (utilisateur.getRole() == Utilisateur.Role.ADMIN) {
-                    Admin_service a = new Admin_service();
-                    a.ajouter(new Admin(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),
-                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(), "HR"));
-                }
-
-                if(utilisateur.getRole() == Utilisateur.Role.ORGANISATEUR){
-                    Organisateur_service o = new Organisateur_service();
-                    o.ajouter(new Organisateur(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),
-                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(),400));
-                }
-
-                if(utilisateur.getRole() == Utilisateur.Role.CLIENT){
-                    Client_service c = new Client_service();
-                    c.ajouter(new Client(userId, utilisateur.getNom(), utilisateur.getPrenom(), utilisateur.getNom_utilisateur(),
-                            utilisateur.getEmail(), utilisateur.getMot_de_passe(), utilisateur.getRole(),userId));
-                }
-
-            }
-
-            System.out.println("Utilisateur ajouté avec succès.");
+            Statement st = connection.createStatement();
+            st.executeUpdate(req);
+            System.out.println("utilisateur ajoutée");
         } catch (SQLException e) {
-            System.out.println("Erreur lors de l'ajout : " + e.getMessage());
+            System.out.println(e.getMessage());
         }
     }
-
 
     @Override
     public void modifier(Utilisateur utilisateur) {
-        // Préparer la requête de mise à jour de l'utilisateur sans toucher au rôle
-        String req = "UPDATE utilisateur SET nom='" + utilisateur.getNom() + "' ,prenom='" + utilisateur.getPrenom() + "' ,nom_utilisateur='" + utilisateur.getNom_utilisateur() + "' ,email='" + utilisateur.getEmail() + "'  ,mot_de_passe='" + utilisateur.getMot_de_passe() + "' WHERE id=" + utilisateur.getId();
-
+        String req = "UPDATE utilisateur SET nom='"+utilisateur.getNom()+"' ,prenom='"+utilisateur.getPrenom()+"' ,nom_utilisateur='"+utilisateur.getNom_utilisateur()+"' ,email='"+utilisateur.getEmail()+"'  ,photo='"+utilisateur.getPhoto()+"' ,mot_de_passe='"+utilisateur.getMot_de_passe()+"' WHERE id="+utilisateur.getId();
         try {
             Statement st = connection.createStatement();
-            st.executeUpdate(req);  // Exécution de la requête pour l'utilisateur
-            System.out.println("Utilisateur modifié");
-
-
-
+            st.executeUpdate(req);
+            System.out.println("Utilisateur modifiée");
         } catch (SQLException e) {
             System.out.println(e.getMessage());
         }
     }
 
-
     @Override
     public void supprimer(Utilisateur utilisateur) {
-        String req = "DELETE FROM utilisateur WHERE id=" + utilisateur.getId();
+        String req = "DELETE FROM utilisateur WHERE id="+utilisateur.getId();
         try {
             Statement st = connection.createStatement();
             st.executeUpdate(req);
@@ -96,9 +58,7 @@
             Statement st = connection.createStatement();
             ResultSet rs = st.executeQuery(req);
             while (rs.next()) {
-                utilisateurs.add(new Utilisateur(rs.getInt("id"), rs.getString("nom"), rs.getString("prenom"), rs.getString("nom_utilisateur"), rs.getString("email"), rs.getString("mot_de_passe"), Utilisateur.Role.valueOf(rs.getString("role").toUpperCase())));
-
-
+                utilisateurs.add(new Utilisateur(rs.getInt("id"), rs.getString("nom"), rs.getString("prenom") , rs.getString("nom_utilisateur"), rs.getString("email"), rs.getBytes("photo") , rs.getString("mot_de_passe") ));
             }
         } catch (SQLException e) {
             System.out.println(e.getMessage());
@@ -109,6 +69,3 @@
 
 
 }
-
-
-
Index: src/main/java/org/example/services/IUtilisateur_service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services;\r\n\r\nimport org.example.models.Trajet;\r\nimport org.example.models.Utilisateur;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic interface IUtilisateur_service {\r\n    void ajouter(Utilisateur utilisateur);\r\n\r\n    void modifier(Utilisateur utilisateur);\r\n\r\n    void supprimer(Utilisateur utilisateur);\r\n\r\n    List<Utilisateur> afficher();\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/IUtilisateur_service.java b/src/main/java/org/example/services/IUtilisateur_service.java
--- a/src/main/java/org/example/services/IUtilisateur_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/services/IUtilisateur_service.java	(date 1739983751618)
@@ -1,9 +1,7 @@
 package org.example.services;
 
-import org.example.models.Trajet;
 import org.example.models.Utilisateur;
 
-import java.util.ArrayList;
 import java.util.List;
 
 public interface IUtilisateur_service {
@@ -14,6 +12,4 @@
     void supprimer(Utilisateur utilisateur);
 
     List<Utilisateur> afficher();
-
-
 }
Index: src/main/java/org/example/services/IAdmin_service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.services;\r\n\r\nimport org.example.models.Admin;\r\nimport org.example.models.Trajet;\r\nimport org.example.models.Utilisateur;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic interface IAdmin_service {\r\n    void ajouter(Admin admin);\r\n\r\n    void modifier(Admin admin , Utilisateur utilisateur);\r\n\r\n    void supprimer(Admin admin, Utilisateur utilisateur);\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/services/IAdmin_service.java b/src/main/java/org/example/services/IAdmin_service.java
--- a/src/main/java/org/example/services/IAdmin_service.java	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/src/main/java/org/example/services/IAdmin_service.java	(date 1739983751618)
@@ -1,22 +1,17 @@
 package org.example.services;
 
 import org.example.models.Admin;
-import org.example.models.Trajet;
 import org.example.models.Utilisateur;
 
-import java.util.ArrayList;
 import java.util.List;
 
 public interface IAdmin_service {
     void ajouter(Admin admin);
 
-    void modifier(Admin admin , Utilisateur utilisateur);
-
-    void supprimer(Admin admin, Utilisateur utilisateur);
-
-
+    void modifier(Admin admin);
 
+    void supprimer(Admin admin);
 
-
+    List<Admin> afficher();
 
 }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>projet_pi_smart_moby</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>23</maven.compiler.source>\r\n        <maven.compiler.target>23</maven.compiler.target>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>8.0.33</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>20.0.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>20.0.2</version>\r\n        </dependency>\r\n    </dependencies>\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.8</version>\r\n                <configuration>\r\n                    <mainClass>com.esprit.tests.MainProgGUI</mainClass>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 5d8dcd09d861c581eab370e90184d182f054638b)
+++ b/pom.xml	(date 1739983751616)
@@ -19,28 +19,6 @@
             <artifactId>mysql-connector-java</artifactId>
             <version>8.0.33</version>
         </dependency>
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-fxml</artifactId>
-            <version>20.0.2</version>
-        </dependency>
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-controls</artifactId>
-            <version>20.0.2</version>
-        </dependency>
     </dependencies>
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.openjfx</groupId>
-                <artifactId>javafx-maven-plugin</artifactId>
-                <version>0.0.8</version>
-                <configuration>
-                    <mainClass>com.esprit.tests.MainProgGUI</mainClass>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
 
 </project>
\ No newline at end of file
